[{"/mnt/h/XDev/Home/project-collections/client/src/index.js":"1","/mnt/h/XDev/Home/project-collections/client/src/reportWebVitals.js":"2","/mnt/h/XDev/Home/project-collections/client/src/App.js":"3","/mnt/h/XDev/Home/project-collections/client/src/auth/Login.jsx":"4","/mnt/h/XDev/Home/project-collections/client/src/auth/Signup.jsx":"5","/mnt/h/XDev/Home/project-collections/client/src/admin/Admin.jsx":"6","/mnt/h/XDev/Home/project-collections/client/src/admin/TableRow.jsx":"7","/mnt/h/XDev/Home/project-collections/client/src/profile/Profile.jsx":"8","/mnt/h/XDev/Home/project-collections/client/src/profile/TableRowCollection.jsx":"9","/mnt/h/XDev/Home/project-collections/client/src/main/Main.jsx":"10","/mnt/h/XDev/Home/project-collections/client/src/core/context.jsx":"11","/mnt/h/XDev/Home/project-collections/client/src/collection/Collection.jsx":"12","/mnt/h/XDev/Home/project-collections/client/src/items/ItemList.jsx":"13","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentForm.jsx":"14","/mnt/h/XDev/Home/project-collections/client/src/comments/Comment.jsx":"15","/mnt/h/XDev/Home/project-collections/client/src/items/ItemPrev.jsx":"16","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionPrev.jsx":"17","/mnt/h/XDev/Home/project-collections/client/src/items/Item.jsx":"18","/mnt/h/XDev/Home/project-collections/client/src/main/Footer.jsx":"19","/mnt/h/XDev/Home/project-collections/client/src/main/Header.jsx":"20","/mnt/h/XDev/Home/project-collections/client/src/items/ItemForm.jsx":"21","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionForm.jsx":"22","/mnt/h/XDev/Home/project-collections/client/src/profile/ProfileCard.jsx":"23","/mnt/h/XDev/Home/project-collections/client/src/collection/Field.jsx":"24","/mnt/h/XDev/Home/project-collections/client/src/drops/DropImageBox.jsx":"25","/mnt/h/XDev/Home/project-collections/client/src/items/CustomFields.jsx":"26","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentBox.jsx":"27","/mnt/h/XDev/Home/project-collections/client/src/items/Likes.jsx":"28","/mnt/h/XDev/Home/project-collections/client/src/auth/GoogleAuth.jsx":"29","/mnt/h/XDev/Home/project-collections/client/src/auth/YandexAuth.jsx":"30"},{"size":287,"mtime":1609254632790,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1609251387818,"results":"33","hashOfConfig":"32"},{"size":2212,"mtime":1610700921042,"results":"34","hashOfConfig":"32"},{"size":2689,"mtime":1610631011089,"results":"35","hashOfConfig":"32"},{"size":2649,"mtime":1609590547651,"results":"36","hashOfConfig":"32"},{"size":3949,"mtime":1610537818236,"results":"37","hashOfConfig":"32"},{"size":794,"mtime":1609599149741,"results":"38","hashOfConfig":"32"},{"size":2769,"mtime":1610549861347,"results":"39","hashOfConfig":"32"},{"size":1836,"mtime":1610705600891,"results":"40","hashOfConfig":"32"},{"size":3491,"mtime":1610542059994,"results":"41","hashOfConfig":"32"},{"size":256,"mtime":1609593926240,"results":"42","hashOfConfig":"32"},{"size":3071,"mtime":1610700571701,"results":"43","hashOfConfig":"32"},{"size":1458,"mtime":1610640918084,"results":"44","hashOfConfig":"32"},{"size":1516,"mtime":1610549213384,"results":"45","hashOfConfig":"32"},{"size":680,"mtime":1610533738305,"results":"46","hashOfConfig":"32"},{"size":1644,"mtime":1610701859672,"results":"47","hashOfConfig":"32"},{"size":1655,"mtime":1610549211812,"results":"48","hashOfConfig":"32"},{"size":6956,"mtime":1610705599119,"results":"49","hashOfConfig":"32"},{"size":424,"mtime":1610281396389,"results":"50","hashOfConfig":"32"},{"size":2875,"mtime":1610548665807,"results":"51","hashOfConfig":"32"},{"size":5738,"mtime":1610549653350,"results":"52","hashOfConfig":"32"},{"size":5967,"mtime":1610549210816,"results":"53","hashOfConfig":"32"},{"size":1900,"mtime":1610549957555,"results":"54","hashOfConfig":"32"},{"size":584,"mtime":1609865235110,"results":"55","hashOfConfig":"32"},{"size":1559,"mtime":1610549403996,"results":"56","hashOfConfig":"32"},{"size":3276,"mtime":1610549539161,"results":"57","hashOfConfig":"32"},{"size":1370,"mtime":1610549212615,"results":"58","hashOfConfig":"32"},{"size":1284,"mtime":1610549796673,"results":"59","hashOfConfig":"32"},{"size":792,"mtime":1610631119623,"results":"60","hashOfConfig":"32"},{"size":526,"mtime":1610630472489,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"blk22b",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"64"},"/mnt/h/XDev/Home/project-collections/client/src/index.js",[],["135","136"],"/mnt/h/XDev/Home/project-collections/client/src/reportWebVitals.js",[],"/mnt/h/XDev/Home/project-collections/client/src/App.js",[],"/mnt/h/XDev/Home/project-collections/client/src/auth/Login.jsx",["137"],"import React, {useState} from 'react';\r\nimport {Form, Button, Card} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport GoogleAuth from './GoogleAuth';\r\nimport YandexAuth from './YandexAuth';\r\n\r\nexport default function Login() {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [formData, setFormData] = useState({username: \"\", password: \"\"})\r\n    const handleChange = (event) => {\r\n        setFormData({...formData, [event.target.name]: event.target.value});\r\n    }\r\n    const handleSubmit = async (event) => {\r\n        setLoading(true);\r\n        event.preventDefault();\r\n        await axios.post('/api/auth/signin', {...formData})\r\n        .then( (res) => {\r\n            localStorage.setItem('userData' , JSON.stringify({...res.data}));\r\n            window.location.replace('/')\r\n        } )\r\n        .catch( (err) => {\r\n            if (err.response.status === 400) {\r\n                document.getElementById('error-msg-js').textContent = \"Invalid Username/Password\"\r\n                setTimeout(()=>{document.getElementById('error-msg-js').textContent = \"\"}, 2000)\r\n            }\r\n        } )\r\n        setLoading(false);\r\n    }\r\n    return (\r\n        <div className=\"card-form-wrap\">\r\n            <Card className=\"text-white bg-dark my-3\">\r\n                <Card.Header as=\"h5\">Sign In</Card.Header>\r\n                <Card.Body>\r\n                    <Form className=\"card-form mx-3\" onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"formBasicUssername\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Username\" name=\"username\" onChange={handleChange}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" onChange={handleChange}/>\r\n                            <Form.Text className=\"text-danger \">\r\n                                <span id=\"error-msg-js\"></span>\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <div>\r\n                            <Button className=\"mx-1\"variant=\"success\" type=\"submit\" disabled={isLoading}>\r\n                                {isLoading ? 'Loading…' : 'Sign In'}\r\n                            </Button>\r\n                            <span className=\"mx-2\" >or</span>\r\n                            <GoogleAuth />\r\n                        </div>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/auth/Signup.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/admin/Admin.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/admin/TableRow.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/profile/Profile.jsx",["138"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Table, Button, Card} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport {AuthContext} from '../core/context';\r\n\r\nimport ProfileCard from './ProfileCard';\r\nimport TableRowCollection from './TableRowCollection';\r\n\r\nexport default function Profile(props) {\r\n    const { profileUserName } = useParams()\r\n    const {isAdmin, username} = useContext(AuthContext);\r\n    const [profile, setProfile] = useState({\r\n        userdata: {\r\n            username: \"\",\r\n            email: \"\",\r\n            created: \"\",\r\n            collections: []\r\n        },\r\n        collections: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (isAdmin || profileUserName === username) {\r\n            axios.post('/api/profile', { \"username\": profileUserName})\r\n            .then((res)=>{\r\n                setProfile({userdata: res.data.userdata, collections: res.data.collections})\r\n            })\r\n            .catch((err)=>{console.log(err)})\r\n        } else {\r\n            window.location.replace('/')\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <ProfileCard userData={profile.userdata}/>\r\n            <Card className=\"bg-dark text-light my-1\">\r\n                <Card.Header as=\"h5\">Collections:</Card.Header>\r\n                <Card.Body>\r\n                    <Table size=\"sm\" bordered hover responsive variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"7\">\r\n                                    <Button\r\n                                        className=\"my-2\"\r\n                                        variant=\"outline-success\"\r\n                                        as=\"a\"\r\n                                        href={`/collection/create/${profileUserName}`}\r\n                                        >Create new collection</Button>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Image</th>\r\n                                <th>Name</th>\r\n                                <th>Theme</th>\r\n                                <th>Items</th>\r\n                                <th>Created</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { profile.collections.map( (coll, index) => {\r\n                                return <TableRowCollection  data={coll} key={index}/>\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/profile/TableRowCollection.jsx",["139","140"],"/mnt/h/XDev/Home/project-collections/client/src/main/Main.jsx",["141"],"import React, {useState, useEffect} from 'react';\r\nimport {Row, Col, Container, Badge, Jumbotron} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport ItemPrev from '../items/ItemPrev';\r\nimport CollectionPrev from '../collection/CollectionPrev';\r\n\r\nexport default function Main() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [lastItems, setlastItems] = useState()\r\n    const [largeColls, setLargeColls] = useState()\r\n    const [tagCloud, setTagCloud] = useState()\r\n\r\n    useEffect(()=>{\r\n        if (!lastItems) {\r\n            axios.get('/api/items/last')\r\n            .then((res)=>{\r\n                setlastItems(res.data.last)})\r\n            .catch((err)=>{console.log(err)})\r\n        }\r\n        if (!largeColls) {\r\n            axios.get('/api/collection/largest')\r\n            .then((res)=>{\r\n                setLargeColls(res.data.largest)})\r\n            .catch((err)=>{console.log(err)})\r\n        }\r\n        if (!tagCloud) {\r\n            axios.get('/api/tag')\r\n            .then((res)=>{\r\n                setTagCloud(res.data.tags)})\r\n            .catch((err)=>{console.log(err)})\r\n        }\r\n        setLoading(false)\r\n    }, [])\r\n\r\n    if (loading){return ''} else {\r\n    return (\r\n        <Container fluid className=\"my-2 bg-dark text-light\">\r\n            <Row>\r\n                <Col lg={10}>\r\n                    <Row>\r\n                        <Jumbotron className=\"w-100 bg-dark text-light text-center\">\r\n                            <Container>\r\n                                <h1>\r\n                                    <span> Welcom to </span>\r\n                                    <strong className=\"decor-brand-text\">Collections</strong>\r\n                                </h1>\r\n                                <p>\r\n                                    Here is a small message for visitors about this site.\r\n                                </p>\r\n                            </Container>\r\n                        </Jumbotron>\r\n                    </Row>\r\n                    <Row className=\"mb-4 justify-content-center\">\r\n                        <Col lg={12}><h4> Last added items:</h4></Col>\r\n                        {lastItems ? lastItems.map((item, index)=>{\r\n                            return (<ItemPrev data={item} key={index}/>)\r\n                        }):\"\"}\r\n                    </Row>\r\n                    <Row className=\"mb-4 justify-content-center\">\r\n                        <Col lg={12}><h4> Largest collections:</h4></Col>\r\n                            {largeColls ? largeColls.map((coll, index)=>{\r\n                                return (<CollectionPrev data={coll} key={index}/>)\r\n                            }):\"\"}\r\n                    </Row>\r\n                </Col>\r\n                <Col lg={2}>\r\n                    <div className=\"my-2\">\r\n                        <h5> Tags: </h5>\r\n                        {tagCloud ? tagCloud.map((tag, index)=>{\r\n                            return (\r\n                                <Badge\r\n                                    key={index}\r\n                                    as=\"a\"\r\n                                    href={`/items/${tag.name}`}\r\n                                    className=\"mx-1 d-inline-block\"\r\n                                    variant=\"light\">\r\n                                    {tag.name}\r\n                                </Badge>)\r\n                        }):\"\"}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )}\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/core/context.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/collection/Collection.jsx",["142","143"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Card, Button, Col, Row, Badge} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport Item from '../items/Item';\r\nimport {AuthContext} from '../core/context';\r\n\r\nexport default function Collection() {\r\n    const {collId} = useParams();\r\n    const [loading, setLoading] = useState(true)\r\n    const {isAuth, isAdmin, userId} = useContext(AuthContext);\r\n    const [collection, setCollection] = useState()\r\n\r\n    useEffect(()=>{\r\n        if (!collection) {\r\n            let params = {collection_id: collId}\r\n            axios.get('/api/collection', {params})\r\n            .then((res)=>{\r\n                setCollection(res.data);\r\n                setLoading(false)\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err);\r\n            })\r\n        }\r\n    },[])\r\n\r\n    if (loading){return ''} else {\r\n    return (\r\n        <Card className=\"bg-dark text-light m-1 p-2\">\r\n            {isAdmin || userId===collection.user_id ?\r\n                <Card.Title>\r\n                    <span> {collection.name} </span>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"outline-light\"\r\n                        className=\"float-right mx-1 px-2\"\r\n                        onClick={()=>{}}>\r\n                        Edit Collection\r\n                    </Button>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"outline-light\"\r\n                        className=\"float-right mx-1 px-2\"\r\n                        as=\"a\"\r\n                        href={`/collection/create_item/${collection._id}`}>\r\n                        Add Item\r\n                    </Button>\r\n                </Card.Title>\r\n            :\r\n                <Card.Title> {collection.name} </Card.Title>\r\n            }\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col lg={3}>\r\n                        <Card.Img src={`/static/${collection.image_url}`}/>\r\n                        <strong ># {collection.user_id.username.toUpperCase()} </strong>\r\n                        {collection.user_id.status ? <Badge variant=\"danger\">Banned</Badge>: ''}\r\n                        <Badge variant=\"warning\">admin</Badge>\r\n                        <br/>\r\n                        <small className=\"text-muted\"> {new Date(collection.created).toLocaleDateString()} </small>\r\n                        <br/>\r\n                        <small><ReactMarkdown children={collection.description}/></small>\r\n                        <div className=\"border-bottom\"></div>\r\n                    </Col>\r\n                    <Col lg={9}>\r\n                        { collection.items.map((data, index) => {\r\n                            return <Item key={index} data={data} owner={isAdmin || userId===collection.user_id}/>\r\n                        })}\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )}\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/items/ItemList.jsx",["144"],"import React, {useState, useEffect} from 'react';\r\nimport {Card, Row} from 'react-bootstrap';\r\nimport {useParams, useLocation} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nimport ItemPrev from './ItemPrev';\r\n\r\nexport default function ItemList() {\r\n    const [items, setItems] = useState([])\r\n    const {subject} = useParams();\r\n    const location = useLocation();\r\n\r\n    useEffect(()=>{\r\n        let params, address;\r\n        if (location.pathname.startsWith('/search')) {\r\n            params = {search: subject};\r\n            address = '/api/items/search';\r\n        } else {\r\n            params = {tag_name: subject};\r\n            address = '/api/items/withtag';\r\n        }\r\n        if (items.length === 0) {\r\n            axios.get(address, {params})\r\n            .then((res)=>{\r\n                setItems(res.data.items)\r\n            })\r\n            .catch((err)=>{console.log(err)})\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Card className=\"my-1 pt-3 border-secondary bg-dark text-light\">\r\n            <Card.Title className=\"ml-3\">{`All items with \"${subject}\":`}</Card.Title>\r\n            <Card.Body>\r\n                <Row>\r\n                {items.length ? items.map((item, index) => { return (\r\n                    <ItemPrev data={item} key={index}/>\r\n                )}) : <span className=\"mx-auto my-4\">{\" There's nothing here ¯\\\\_(ツ)_/¯ \"}</span> }\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentForm.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/comments/Comment.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/items/ItemPrev.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionPrev.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/items/Item.jsx",["145","146","147","148","149","150"],"/mnt/h/XDev/Home/project-collections/client/src/main/Footer.jsx",["151","152"],"import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"container text-center mt-2 py-2 bg-dark text-light\">\r\n            <p>\r\n                © 2020-2021 Bla-Bla-Company, Inc.  ·\r\n                <a href=\"#\"> BadLink#1 </a>\r\n                  ·\r\n                <a href=\"#\"> BadLink#2 </a>\r\n                <span></span>\r\n            </p>\r\n        </footer>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/main/Header.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/items/ItemForm.jsx",["153"],"import React, {useState, useEffect} from 'react';\r\nimport {Card, Form, Button, Col} from 'react-bootstrap';\r\nimport {useParams} from \"react-router-dom\";\r\nimport Tags from \"@yaireo/tagify/dist/react.tagify\"\r\nimport axios from 'axios';\r\n\r\nimport DropImageBox from '../drops/DropImageBox';\r\nimport CustomFields from './CustomFields';\r\n\r\nexport default function ItemForm() {\r\n    const {collection_id} = useParams();\r\n    const [scheme, setScheme] = useState([])\r\n    const [inputTags, setInputTags] = useState([])\r\n    const [whiteList, setWhiteList] = useState()\r\n    const [formData, setFormData] = useState({name: \"\"})\r\n    const [fieldsData, setFieldsData] = useState(new Array(15).fill(false))\r\n    const [prevUrl, setPrevUrl] = useState()\r\n    const [fileCont, setFileCont] = useState()\r\n\r\n    const onDropHandle = (afiles, rfiles, event) => {\r\n        if (afiles.length !== 0) {\r\n            let reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                let url = reader.result\r\n                setPrevUrl(url);\r\n            }\r\n            reader.readAsDataURL(afiles[0])\r\n            setFileCont(afiles)\r\n        }\r\n    }\r\n\r\n    const tagsChangeHandle = (event) => {\r\n        event.persist();\r\n        let tags = []\r\n        let data = event.target.value ? JSON.parse(event.target.value): []\r\n        for (let i in data) {\r\n            tags.push(data[i].value);\r\n        }\r\n        setInputTags(tags);\r\n    }\r\n\r\n    const formChangeHandle = (event) => {\r\n        setFormData({...formData, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const fieldsChangeHandle = (event) => {\r\n        let tempData = fieldsData;\r\n        if (event.target.type === \"checkbox\") {\r\n            tempData[parseInt(event.target.id)] = event.target.checked;\r\n        } else if (event.target.type === \"number\") {\r\n            tempData[parseInt(event.target.id)] = parseInt(event.target.value);\r\n        } else if (event.target.type === \"date\") {\r\n            tempData[parseInt(event.target.id)] = new Date(event.target.value);\r\n        } else {\r\n            tempData[parseInt(event.target.id)] = event.target.value;\r\n        }\r\n        setFieldsData(tempData)\r\n    }\r\n\r\n    const formSubmitHandle = (event) => {\r\n        event.preventDefault();\r\n        axios.post('/api/collection/add', {\r\n            name: formData.name,\r\n            fields: fieldsData,\r\n            coll_id: collection_id,\r\n            tags: inputTags,\r\n            scheme: scheme\r\n        })\r\n        .then((res) => {\r\n            const item_id = res.data.item_id;\r\n            const data = new FormData();\r\n            data.append(\"item_id\", item_id);\r\n            data.append('image', fileCont[0]);\r\n            const config = {headers: {'Content-Type': 'multipart/form-data'}};\r\n            axios.post('/api/collection/image', data, config)\r\n            .then((res) => {\r\n                window.location.replace(`/collection/${collection_id}`)\r\n            })\r\n            .catch((err) => { console.log(err) });\r\n        })\r\n        .catch((err) => { console.log(err) })\r\n    }\r\n\r\n    useEffect( () => {\r\n        if (scheme.length === 0) {\r\n            axios.post('/api/collection/scheme', {coll_id: collection_id})\r\n            .then((res)=>{\r\n                setScheme(res.data)\r\n            })\r\n            .catch((err)=>{ })\r\n        }\r\n        if (!whiteList){\r\n            axios.get('/api/tag')\r\n            .then((res)=>{ let temp = []; res.data.forEach( (tag) => { temp.push(tag.name) }); setWhiteList(temp)})\r\n            .catch((err)=>{ console.log(err) })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"my-1 p-2 bg-dark text-light\">\r\n                <Form className=\"bg-dark text-light\" onSubmit={formSubmitHandle}>\r\n                    <Card.Title className=\"text-center my-4\"> {'Create new item'}</Card.Title>\r\n                    <Form.Row className=\"justify-content-center\">\r\n                        <Col lg={4}>\r\n                            <Form.Group>\r\n                                <DropImageBox onDrop={onDropHandle} successFlag={prevUrl} prev={prevUrl}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"justify-content-center\">\r\n                        <Col lg={6} className=\"align-middle\">\r\n                            <Form.Group >\r\n                                <Form.Label > Item Name: </Form.Label>\r\n                                <Form.Control\r\n                                    required={true}\r\n                                    onChange={formChangeHandle}\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    className=\"bg-dark text-light\"/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Tags\r\n                                    value=''\r\n                                    whitelist={whiteList}\r\n                                    onChange={tagsChangeHandle}\r\n                                    placeholder=\"Tags\"\r\n                                    className=\"form-control form-control-sm bg-dark text-light c-tag border-light\"/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"justify-content-center\">\r\n                        <CustomFields scheme={scheme} onChangeFunc={fieldsChangeHandle}/>\r\n                    </Form.Row>\r\n                    <Button variant=\"light\" type=\"submit\" className=\"float-right w-25\"> Create </Button>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionForm.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/profile/ProfileCard.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/collection/Field.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/drops/DropImageBox.jsx",["154","155","156","157"],"import React from 'react';\r\nimport Dropzone, {useDropzone} from 'react-dropzone'\r\n\r\nexport default function DropImageBox(props) {\r\n    const {getRootProps, getInputProps, acceptedFiles, fileRejections} = useDropzone()\r\n    return (\r\n        <Dropzone\r\n            onDrop={props.onDrop}\r\n            onDragEnter={(event)=>{event.target.classList.toggle ('dropbox-active')}}\r\n            onDragLeave={(event)=>{event.target.classList.toggle ('dropbox-active')}}\r\n            accept=\"image/jpg, image/jpeg, image/png\"\r\n            maxFiles={1}\r\n            maxSize={500000}\r\n            >\r\n            {({getRootProps, getInputProps}) => (\r\n                <section className=\"text-center\">\r\n                    <div {...getRootProps()}\r\n                        className={props.prev ?\r\n                            \"rounded  dropbox dropbox-success mx-auto\":\r\n                            \"rounded  dropbox mx-auto\"}\r\n                        style={{\r\n                            \"background-position\": \"center\",\r\n                            \"background-size\": \"contain\",\r\n                            \"background-image\": `url(${props.prev})`,\r\n                            \"background-origin\": \"content-box\",\r\n                            \"background-repeat\": \"no-repeat\"\r\n                        }}\r\n                        >\r\n                        <input {...getInputProps()}/>\r\n                        {props.prev ? '' : <p> Click here  or drop image</p>}\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </Dropzone>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/items/CustomFields.jsx",["158","159","160","161","162"],"import React from 'react';\r\nimport {Form, Col, Row,Container} from 'react-bootstrap';\r\n\r\nexport default function CustomFields(props) {\r\n    return (\r\n        <Container className=\"my-2\">\r\n\r\n            {props.scheme.slice(0,3).map((field,index)=>{ if (field !== '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index ? index : \"0\"}\r\n                            className=\"bg-dark text-light\"\r\n                            type=\"number\"\r\n                            />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(3,6).map((field,index)=>{ if (field !== '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 3}\r\n                            className=\"bg-dark text-light\" />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(6,9).map((field,index)=>{ if (field !== '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            rows={5}\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 6}\r\n                            className=\"bg-dark text-light unres\"\r\n                            as=\"textarea\" />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(9,12).map((field,index)=>{ if (field !== '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            placeholder=\"asdasd\"\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 9}\r\n                            className=\"bg-dark text-light text-center\"\r\n                            type=\"date\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(12,15).map((field,index)=>{ if (field !== '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Form.Check\r\n                        bsPrefix=\"text-center\"\r\n                        id={index + 12}\r\n                        onChange={props.onChangeFunc}\r\n                        label={field}/>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n        </Container>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentBox.jsx",["163"],"import React, {useState, useEffect} from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport Comment from './Comment';\r\nimport CommentForm from './CommentForm';\r\n\r\nexport default function CommentBox(props) {\r\n    const [firstLoad, setFirstLoad] = useState(true)\r\n    const [comments, setComments] = useState([])\r\n    const [intID, setIntID] = useState(null)\r\n\r\n    const getComments = ()=>{\r\n        console.log('- - - - - - - > ', new Date());\r\n        let params = {itemId: props.itemId}\r\n        axios.get('/api/comments', {params})\r\n        .then((res)=>{\r\n            setComments(res.data.comments)\r\n        })\r\n        .catch((err)=>{ console.log(err) })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (firstLoad) { getComments(); setFirstLoad(false); }\r\n        if (props.isOpen && !intID) {\r\n            setIntID( setInterval(()=>{ getComments() }, 4999) );\r\n        } else if (!props.isOpen && intID) {\r\n            clearInterval(intID);\r\n            setIntID(null)\r\n        }\r\n    }, [props.isOpen])\r\n\r\n    return (\r\n        <Row className=\"mt-4 mx-auto\">\r\n            <Col lg={12} >\r\n                { comments.map((comment, index)=>{ return <Comment data={comment} key={index}/> })}\r\n                <CommentForm itemId={props.itemId} onSubmitGetComment={()=>{getComments()}}/>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/items/Likes.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/auth/GoogleAuth.jsx",["164"],"import React, {useState} from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\n\r\nexport default function GoogleAuth() {\r\n    const responseGoogle = (response) => {\r\n        console.log(response);\r\n    }\r\n\r\n    return (\r\n        <GoogleLogin\r\n            clientId=\"442745189059-183d5c6v8o5314bpa433fe3u9h6qpg7v.apps.googleusercontent.com\"\r\n            render={renderProps => (\r\n                <button\r\n                    className=\"btn btn-light\"\r\n                    onClick={renderProps.onClick}\r\n                    disabled={renderProps.disabled}>\r\n                    Google\r\n                </button>\r\n            )}\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n          />\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/auth/YandexAuth.jsx",["165","166","167","168"],"import React, {useState} from 'react';\r\nimport {Form, Button, Card} from 'react-bootstrap';\r\n\r\nexport default function YandexAuth() {\r\n    const CID = 'e26f7a74823a421990a54f202ad770a1'\r\n    const yandexAuthUrl = `https://oauth.yandex.ru/authorize?response_type=token&client_id=${CID}` //&display=popup\r\n\r\n    const clickHandle = ()=>{\r\n\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            variant=\"light\"\r\n            className=\"mx-1\"\r\n            onClick={ clickHandle }\r\n            > Yandex\r\n        </Button>\r\n    )\r\n}\r\n",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":18},{"ruleId":"177","severity":1,"message":"178","line":34,"column":8,"nodeType":"179","endLine":34,"endColumn":10,"suggestions":"180"},{"ruleId":"173","severity":1,"message":"181","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":13},{"ruleId":"182","severity":1,"message":"183","line":31,"column":17,"nodeType":"184","endLine":31,"endColumn":76},{"ruleId":"177","severity":1,"message":"185","line":34,"column":8,"nodeType":"179","endLine":34,"endColumn":10,"suggestions":"186"},{"ruleId":"173","severity":1,"message":"187","line":13,"column":12,"nodeType":"175","messageId":"176","endLine":13,"endColumn":18},{"ruleId":"177","severity":1,"message":"188","line":28,"column":7,"nodeType":"179","endLine":28,"endColumn":9,"suggestions":"189"},{"ruleId":"177","severity":1,"message":"190","line":29,"column":8,"nodeType":"179","endLine":29,"endColumn":10,"suggestions":"191"},{"ruleId":"173","severity":1,"message":"192","line":12,"column":12,"nodeType":"175","messageId":"176","endLine":12,"endColumn":19},{"ruleId":"173","severity":1,"message":"193","line":12,"column":21,"nodeType":"175","messageId":"176","endLine":12,"endColumn":27},{"ruleId":"194","severity":1,"message":"195","line":59,"column":106,"nodeType":"196","messageId":"197","endLine":59,"endColumn":108},{"ruleId":"194","severity":1,"message":"195","line":65,"column":111,"nodeType":"196","messageId":"197","endLine":65,"endColumn":113},{"ruleId":"194","severity":1,"message":"195","line":71,"column":116,"nodeType":"196","messageId":"197","endLine":71,"endColumn":118},{"ruleId":"194","severity":1,"message":"195","line":83,"column":98,"nodeType":"196","messageId":"197","endLine":83,"endColumn":100},{"ruleId":"198","severity":1,"message":"199","line":8,"column":17,"nodeType":"184","endLine":8,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":10,"column":17,"nodeType":"184","endLine":10,"endColumn":29},{"ruleId":"177","severity":1,"message":"200","line":97,"column":8,"nodeType":"179","endLine":97,"endColumn":10,"suggestions":"201"},{"ruleId":"173","severity":1,"message":"202","line":5,"column":12,"nodeType":"175","messageId":"176","endLine":5,"endColumn":24},{"ruleId":"173","severity":1,"message":"203","line":5,"column":26,"nodeType":"175","messageId":"176","endLine":5,"endColumn":39},{"ruleId":"173","severity":1,"message":"204","line":5,"column":41,"nodeType":"175","messageId":"176","endLine":5,"endColumn":54},{"ruleId":"173","severity":1,"message":"205","line":5,"column":56,"nodeType":"175","messageId":"176","endLine":5,"endColumn":70},{"ruleId":"194","severity":1,"message":"195","line":8,"column":55,"nodeType":"196","messageId":"197","endLine":8,"endColumn":57},{"ruleId":"194","severity":1,"message":"195","line":23,"column":55,"nodeType":"196","messageId":"197","endLine":23,"endColumn":57},{"ruleId":"194","severity":1,"message":"195","line":36,"column":55,"nodeType":"196","messageId":"197","endLine":36,"endColumn":57},{"ruleId":"194","severity":1,"message":"195","line":51,"column":56,"nodeType":"196","messageId":"197","endLine":51,"endColumn":58},{"ruleId":"194","severity":1,"message":"195","line":66,"column":57,"nodeType":"196","messageId":"197","endLine":66,"endColumn":59},{"ruleId":"177","severity":1,"message":"206","line":31,"column":8,"nodeType":"179","endLine":31,"endColumn":22,"suggestions":"207"},{"ruleId":"173","severity":1,"message":"208","line":1,"column":16,"nodeType":"175","messageId":"176","endLine":1,"endColumn":24},{"ruleId":"173","severity":1,"message":"208","line":1,"column":16,"nodeType":"175","messageId":"176","endLine":1,"endColumn":24},{"ruleId":"173","severity":1,"message":"209","line":2,"column":9,"nodeType":"175","messageId":"176","endLine":2,"endColumn":13},{"ruleId":"173","severity":1,"message":"210","line":2,"column":23,"nodeType":"175","messageId":"176","endLine":2,"endColumn":27},{"ruleId":"173","severity":1,"message":"211","line":6,"column":11,"nodeType":"175","messageId":"176","endLine":6,"endColumn":24},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'YandexAuth' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAdmin', 'profileUserName', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["214"],"'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'largeColls', 'lastItems', and 'tagCloud'. Either include them or remove the dependency array.",["215"],"'isAuth' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'collId' and 'collection'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has missing dependencies: 'items.length', 'location.pathname', and 'subject'. Either include them or remove the dependency array.",["217"],"'isAdmin' is assigned a value but never used.","'userId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'collection_id', 'scheme.length', and 'whiteList'. Either include them or remove the dependency array.",["218"],"'getRootProps' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'acceptedFiles' is assigned a value but never used.","'fileRejections' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'firstLoad', 'getComments', and 'intID'. Either include them or remove the dependency array.",["219"],"'useState' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'yandexAuthUrl' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},"Update the dependencies array to be: [isAdmin, profileUserName, username]",{"range":"232","text":"233"},"Update the dependencies array to be: [largeColls, lastItems, tagCloud]",{"range":"234","text":"235"},"Update the dependencies array to be: [collId, collection]",{"range":"236","text":"237"},"Update the dependencies array to be: [items.length, location.pathname, subject]",{"range":"238","text":"239"},"Update the dependencies array to be: [collection_id, scheme.length, whiteList]",{"range":"240","text":"241"},"Update the dependencies array to be: [firstLoad, getComments, intID, props.isOpen]",{"range":"242","text":"243"},[1119,1121],"[isAdmin, profileUserName, username]",[1159,1161],"[largeColls, lastItems, tagCloud]",[941,943],"[collId, collection]",[915,917],"[items.length, location.pathname, subject]",[3577,3579],"[collection_id, scheme.length, whiteList]",[1027,1041],"[firstLoad, getComments, intID, props.isOpen]"]