[{"/mnt/h/XDev/Home/project-collections/client/src/index.js":"1","/mnt/h/XDev/Home/project-collections/client/src/reportWebVitals.js":"2","/mnt/h/XDev/Home/project-collections/client/src/App.js":"3","/mnt/h/XDev/Home/project-collections/client/src/auth/Login.jsx":"4","/mnt/h/XDev/Home/project-collections/client/src/auth/Signup.jsx":"5","/mnt/h/XDev/Home/project-collections/client/src/admin/Admin.jsx":"6","/mnt/h/XDev/Home/project-collections/client/src/admin/TableRow.jsx":"7","/mnt/h/XDev/Home/project-collections/client/src/profile/Profile.jsx":"8","/mnt/h/XDev/Home/project-collections/client/src/profile/TableRowCollection.jsx":"9","/mnt/h/XDev/Home/project-collections/client/src/main/Main.jsx":"10","/mnt/h/XDev/Home/project-collections/client/src/core/context.jsx":"11","/mnt/h/XDev/Home/project-collections/client/src/collection/Collection.jsx":"12","/mnt/h/XDev/Home/project-collections/client/src/items/ItemList.jsx":"13","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentForm.jsx":"14","/mnt/h/XDev/Home/project-collections/client/src/comments/Comment.jsx":"15","/mnt/h/XDev/Home/project-collections/client/src/items/ItemPrev.jsx":"16","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionPrev.jsx":"17","/mnt/h/XDev/Home/project-collections/client/src/items/Item.jsx":"18","/mnt/h/XDev/Home/project-collections/client/src/main/Footer.jsx":"19","/mnt/h/XDev/Home/project-collections/client/src/main/Header.jsx":"20","/mnt/h/XDev/Home/project-collections/client/src/items/ItemForm.jsx":"21","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionForm.jsx":"22","/mnt/h/XDev/Home/project-collections/client/src/profile/ProfileCard.jsx":"23","/mnt/h/XDev/Home/project-collections/client/src/collection/Field.jsx":"24","/mnt/h/XDev/Home/project-collections/client/src/drops/DropImageBox.jsx":"25","/mnt/h/XDev/Home/project-collections/client/src/items/CustomFields.jsx":"26","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentBox.jsx":"27","/mnt/h/XDev/Home/project-collections/client/src/items/Likes.jsx":"28"},{"size":287,"mtime":1609254632790,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1609251387818,"results":"31","hashOfConfig":"30"},{"size":2099,"mtime":1610465110579,"results":"32","hashOfConfig":"30"},{"size":2753,"mtime":1609592268716,"results":"33","hashOfConfig":"30"},{"size":2649,"mtime":1609590547651,"results":"34","hashOfConfig":"30"},{"size":3942,"mtime":1609685475150,"results":"35","hashOfConfig":"30"},{"size":794,"mtime":1609599149741,"results":"36","hashOfConfig":"30"},{"size":2787,"mtime":1610443541264,"results":"37","hashOfConfig":"30"},{"size":1808,"mtime":1610451675459,"results":"38","hashOfConfig":"30"},{"size":2840,"mtime":1610463091458,"results":"39","hashOfConfig":"30"},{"size":256,"mtime":1609593926240,"results":"40","hashOfConfig":"30"},{"size":3095,"mtime":1610451074280,"results":"41","hashOfConfig":"30"},{"size":1155,"mtime":1610532787440,"results":"42","hashOfConfig":"30"},{"size":1477,"mtime":1610536495320,"results":"43","hashOfConfig":"30"},{"size":680,"mtime":1610533738305,"results":"44","hashOfConfig":"30"},{"size":1505,"mtime":1610465190317,"results":"45","hashOfConfig":"30"},{"size":1611,"mtime":1610464111671,"results":"46","hashOfConfig":"30"},{"size":5330,"mtime":1610534579309,"results":"47","hashOfConfig":"30"},{"size":424,"mtime":1610281396389,"results":"48","hashOfConfig":"30"},{"size":2421,"mtime":1610451775011,"results":"49","hashOfConfig":"30"},{"size":5843,"mtime":1610449113072,"results":"50","hashOfConfig":"30"},{"size":6076,"mtime":1610355867818,"results":"51","hashOfConfig":"30"},{"size":2066,"mtime":1610379474101,"results":"52","hashOfConfig":"30"},{"size":584,"mtime":1609865235110,"results":"53","hashOfConfig":"30"},{"size":1559,"mtime":1610027352706,"results":"54","hashOfConfig":"30"},{"size":3284,"mtime":1610199687124,"results":"55","hashOfConfig":"30"},{"size":1379,"mtime":1610536258478,"results":"56","hashOfConfig":"30"},{"size":1250,"mtime":1610369370827,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"blk22b",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},"/mnt/h/XDev/Home/project-collections/client/src/index.js",[],["127","128"],"/mnt/h/XDev/Home/project-collections/client/src/reportWebVitals.js",[],"/mnt/h/XDev/Home/project-collections/client/src/App.js",[],"/mnt/h/XDev/Home/project-collections/client/src/auth/Login.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/auth/Signup.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/admin/Admin.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/admin/TableRow.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/profile/Profile.jsx",["129","130","131","132"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Table, Button, Card, Row, Col} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport {AuthContext} from '../core/context';\r\n\r\nimport ProfileCard from './ProfileCard';\r\nimport TableRowCollection from './TableRowCollection';\r\n\r\nexport default function Profile(props) {\r\n    const { profileUserName } = useParams()\r\n    const {isAuth, isAdmin, username} = useContext(AuthContext);\r\n    const [profile, setProfile] = useState({\r\n        userdata: {\r\n            username: \"\",\r\n            email: \"\",\r\n            created: \"\",\r\n            collections: []\r\n        },\r\n        collections: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (isAdmin || profileUserName === username) {\r\n            axios.post('/api/profile', { \"username\": profileUserName})\r\n            .then((res)=>{\r\n                setProfile({userdata: res.data.userdata, collections: res.data.collections})\r\n            })\r\n            .catch((err)=>{console.log(err)})\r\n        } else {\r\n            window.location.replace('/')\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <ProfileCard userData={profile.userdata}/>\r\n            <Card className=\"bg-dark text-light my-1\">\r\n                <Card.Header as=\"h5\">Collections:</Card.Header>\r\n                <Card.Body>\r\n                    <Table size=\"sm\" bordered hover responsive variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"7\">\r\n                                    <Button\r\n                                        className=\"my-2\"\r\n                                        variant=\"outline-success\"\r\n                                        as=\"a\"\r\n                                        href={`/collection/create/${profileUserName}`}\r\n                                        >Create new collection</Button>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Image</th>\r\n                                <th>Name</th>\r\n                                <th>Theme</th>\r\n                                <th>Items</th>\r\n                                <th>Created</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { profile.collections.map( (coll, index) => {\r\n                                return <TableRowCollection  data={coll} key={index}/>\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/profile/TableRowCollection.jsx",["133"],"import React, {useState} from 'react';\r\nimport {Button, ButtonGroup } from 'react-bootstrap';\r\nimport {TrashFill, PenFill, PlusSquare} from 'react-bootstrap-icons';\r\n\r\nexport default function TableRowCollection(props) {\r\n    const [hover, setHover] = useState(false)\r\n    const editHandle = () =>{\r\n        // TODO: edit\r\n    }\r\n    const deleteHandle = () =>{\r\n        // TODO: delete\r\n    }\r\n\r\n    return (\r\n        <tr onMouseOver={()=>{setHover(true)}} onMouseOut={()=>{setHover(false)}} >\r\n            <td className=\"ctd align-middle p-0\">\r\n                <ButtonGroup className={` ${ hover ? '': 'invisible'}`}>\r\n                  <Button size=\"sm\" variant=\"outline-info\" onClick={editHandle}>\r\n                      <PenFill color=\"white\" className=\"\"/>\r\n                  </Button>\r\n                  <Button size=\"sm\" variant=\"outline-success\" as=\"a\" href={ `/collection/create_item/${props.data._id}` }>\r\n                      <PlusSquare color=\"white\" />\r\n                  </Button>\r\n                  <Button size=\"sm\" variant=\"outline-danger\" onClick={deleteHandle}>\r\n                      <TrashFill color=\"white\" />\r\n                  </Button>\r\n                </ButtonGroup>\r\n            </td>\r\n            <td className=\"ctd\">\r\n                <img src={'/static' + props.data.image_url} height=\"60px\"/>\r\n            </td>\r\n            <td className=\"ctd\" as=\"a\" href={`/collection/${props.data._id}`} >\r\n                <a className=\"text-decoration-none text-light\" href={`/collection/${props.data._id}`} >{props.data.name}</a>\r\n            </td>\r\n            <td className=\"ctd\">{props.data.theme}</td>\r\n            <td className=\"ctd\">{props.data.items.length}</td>\r\n            <td className=\"ctd\">{new Date(props.data.created).toLocaleDateString()}</td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/main/Main.jsx",["134"],"import React, {useState, useEffect} from 'react';\r\nimport {Row, Col, Container, Badge} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport ItemPrev from '../items/ItemPrev';\r\nimport CollectionPrev from '../collection/CollectionPrev';\r\n\r\nexport default function Main() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [lastItems, setlastItems] = useState()\r\n    const [largeColls, setLargeColls] = useState()\r\n    const [tagCloud, setTagCloud] = useState()\r\n\r\n    useEffect(()=>{\r\n        if (!lastItems) {\r\n            axios.get('/api/items/last')\r\n            .then((res)=>{\r\n                setlastItems(res.data.last)})\r\n            .catch((err)=>{console.log(err)})\r\n        }\r\n        if (!largeColls) {\r\n            axios.get('/api/collection/largest')\r\n            .then((res)=>{\r\n                setLargeColls(res.data.largest)})\r\n            .catch((err)=>{console.log(err)})\r\n        }\r\n        if (!tagCloud) {\r\n            axios.get('/api/tag')\r\n            .then((res)=>{\r\n                setTagCloud(res.data.tags)})\r\n            .catch((err)=>{console.log(err)})\r\n        }\r\n        setLoading(false)\r\n    }, [])\r\n\r\n    if (loading){return ''} else {\r\n    return (\r\n        <Container fluid className=\"my-2 bg-dark text-light\">\r\n            <Row>\r\n                <Col lg={10}>\r\n                    <Row className=\"mb-4 justify-content-center\">\r\n                        <Col lg={12}><h4> Last added items:</h4></Col>\r\n                        {lastItems ? lastItems.map((item, index)=>{\r\n                            return (<Col lg={4} className=\"my-1\"><ItemPrev data={item} key={index}/></Col>)\r\n                        }):\"\"}\r\n                    </Row>\r\n                    <Row className=\"mb-4 justify-content-center\">\r\n                        <Col lg={12}><h4> Largest collections:</h4></Col>\r\n                            {largeColls ? largeColls.map((coll, index)=>{\r\n                                return (<Col lg={12} className=\"my-1\"><CollectionPrev data={coll} key={index}/></Col>)\r\n                            }):\"\"}\r\n                    </Row>\r\n                </Col>\r\n                <Col lg={2}>\r\n                    <div className=\"my-2\">\r\n                        <h5> Tags: </h5>\r\n                        {tagCloud ? tagCloud.map((tag, index)=>{\r\n                            return (\r\n                                <Badge\r\n                                    as=\"a\"\r\n                                    href={`/items/${tag.name}`}\r\n                                    className=\"mx-1 d-inline-block\"\r\n                                    variant=\"light\">\r\n                                    {tag.name}\r\n                                </Badge>)\r\n                        }):\"\"}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )}\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/core/context.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/collection/Collection.jsx",["135"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Card, Button, Col, Row, Badge} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport Item from '../items/Item';\r\nimport {AuthContext} from '../core/context';\r\n\r\nexport default function Collection() {\r\n    const {collId} = useParams();\r\n    const [loading, setLoading] = useState(true)\r\n    const {isAuth, isAdmin} = useContext(AuthContext);\r\n    const [collection, setCollection] = useState()\r\n\r\n    useEffect(()=>{\r\n        if (!collection) {\r\n            let params = {collection_id: collId}\r\n            axios.get('/api/collection', {params})\r\n            .then((res)=>{\r\n                setCollection(res.data);\r\n                setLoading(false)\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err);\r\n            })\r\n        }\r\n    },[])\r\n\r\n    if (loading){return ''} else {\r\n    return (\r\n        <Card className=\"bg-dark text-light m-1 p-2\">\r\n            {isAuth || isAdmin ?     /////////////////////////////////////// collection.user_id\r\n                <Card.Title>\r\n                    <span> {collection.name} </span>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"outline-light\"\r\n                        className=\"float-right mx-1 px-2\" o\r\n                        nClick={()=>{}}>\r\n                        Edit Collection\r\n                    </Button>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"outline-light\"\r\n                        className=\"float-right mx-1 px-2\"\r\n                        as=\"a\"\r\n                        href={`/collection/create_item/${collection._id}`}>\r\n                        Add Item\r\n                    </Button>\r\n                </Card.Title>\r\n            :\r\n                <Card.Title> {collection.name} </Card.Title>\r\n            }\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col lg={3}>\r\n                        <Card.Img src={`/static/${collection.image_url}`}/>\r\n                        <strong className=\"\"># {collection.user_id.username.toUpperCase()} </strong>\r\n                        {collection.user_id.status ? <Badge variant=\"danger\">Banned</Badge>: ''}\r\n                        <Badge variant=\"warning\">admin</Badge>\r\n                        <br/>\r\n                        <small className=\"text-muted\"> {new Date(collection.created).toLocaleDateString()} </small>\r\n                        <br/>\r\n                        <small><ReactMarkdown children={collection.description}/></small>\r\n                        <div className=\"border-bottom\"></div>\r\n                    </Col>\r\n                    <Col lg={9} className=\"\">\r\n                        { collection.items.map((data, index) => {\r\n                            return <Row><Item key={index} data={data}/></Row>\r\n                        })}\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )}\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/items/ItemList.jsx",["136"],"/mnt/h/XDev/Home/project-collections/client/src/comments/CommentForm.jsx",["137"],"/mnt/h/XDev/Home/project-collections/client/src/comments/Comment.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/items/ItemPrev.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionPrev.jsx",["138"],"import React from 'react';\r\nimport {Card, Button, Col, Row, Image} from 'react-bootstrap';\r\n\r\nexport default function CollectionPrev(props) {\r\n\r\n    return (\r\n        <Card\r\n            border=\"light\"\r\n            bg=\"dark\"\r\n            text=\"white\"\r\n            role=\"button\"\r\n            onClick={()=>{window.location.replace(`/collection/${props.data._id}`)}}\r\n        >\r\n            <Card.Title >{props.data.name}</Card.Title>\r\n\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <Image\r\n                            rounded\r\n                            fluid\r\n                            variant=\"top\"\r\n                            src={`/static/${props.data.image_url}`}/>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                        <Card.Text>\r\n                            {props.data.description}\r\n                        </Card.Text>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <span>Theme: <strong>{props.data.theme}</strong></span>\r\n                        <span className=\"float-right\">Total items: <strong>{props.data.itemCount}</strong></span>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <small className=\"text-muted\"> {new Date(props.data.created).toLocaleDateString()} </small>\r\n                <strong className=\"text-muted float-right \"> # {props.data.users[0].username.toUpperCase()} </strong>\r\n            </Card.Footer>\r\n        </Card>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/items/Item.jsx",["139","140","141","142","143","144"],"/mnt/h/XDev/Home/project-collections/client/src/main/Footer.jsx",["145","146"],"import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"container text-center mt-2 py-2 bg-dark text-light\">\r\n            <p>\r\n                © 2020-2021 Bla-Bla-Company, Inc.  ·\r\n                <a href=\"#\"> BadLink#1 </a>\r\n                  ·\r\n                <a href=\"#\"> BadLink#2 </a>\r\n                <span></span>\r\n            </p>\r\n        </footer>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/main/Header.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/items/ItemForm.jsx",["147","148"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {Card, Form, Button, Col} from 'react-bootstrap';\r\nimport {useParams} from \"react-router-dom\";\r\nimport Tags from \"@yaireo/tagify/dist/react.tagify\"\r\nimport axios from 'axios';\r\n\r\nimport {AuthContext} from '../core/context';\r\nimport DropImageBox from '../drops/DropImageBox';\r\nimport CustomFields from './CustomFields';\r\n\r\nexport default function ItemForm() {\r\n    const {collection_id} = useParams();\r\n    const {userId} = useContext(AuthContext);\r\n    const [scheme, setScheme] = useState([])\r\n    const [inputTags, setInputTags] = useState([])\r\n    const [whiteList, setWhiteList] = useState()\r\n    const [formData, setFormData] = useState({name: \"\"})\r\n    const [fieldsData, setFieldsData] = useState(new Array(15).fill(false))\r\n    const [prevUrl, setPrevUrl] = useState()\r\n    const [fileCont, setFileCont] = useState()\r\n\r\n    const onDropHandle = (afiles, rfiles, event) => {\r\n        if (afiles.length !== 0) {\r\n            let reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                let url = reader.result\r\n                setPrevUrl(url);\r\n            }\r\n            reader.readAsDataURL(afiles[0])\r\n            setFileCont(afiles)\r\n        }\r\n    }\r\n\r\n    const tagsChangeHandle = (event) => {\r\n        event.persist();\r\n        let tags = []\r\n        let data = event.target.value ? JSON.parse(event.target.value): []\r\n        for (let i in data) {\r\n            tags.push(data[i].value);\r\n        }\r\n        setInputTags(tags);\r\n    }\r\n\r\n    const formChangeHandle = (event) => {\r\n        setFormData({...formData, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const fieldsChangeHandle = (event) => {\r\n        let tempData = fieldsData;\r\n        if (event.target.type === \"checkbox\") {\r\n            tempData[parseInt(event.target.id)] = event.target.checked;\r\n        } else if (event.target.type === \"number\") {\r\n            tempData[parseInt(event.target.id)] = parseInt(event.target.value);\r\n        } else if (event.target.type === \"date\") {\r\n            tempData[parseInt(event.target.id)] = new Date(event.target.value);\r\n        } else {\r\n            tempData[parseInt(event.target.id)] = event.target.value;\r\n        }\r\n        setFieldsData(tempData)\r\n    }\r\n\r\n    const formSubmitHandle = (event) => {\r\n        event.preventDefault();\r\n        axios.post('/api/collection/add', {\r\n            name: formData.name,\r\n            fields: fieldsData,\r\n            coll_id: collection_id,\r\n            tags: inputTags,\r\n            scheme: scheme\r\n        })\r\n        .then((res) => {\r\n            const item_id = res.data.item_id;\r\n            const data = new FormData();\r\n            data.append(\"item_id\", item_id);\r\n            data.append('image', fileCont[0]);\r\n            const config = {headers: {'Content-Type': 'multipart/form-data'}};\r\n            axios.post('/api/collection/image', data, config)\r\n            .then((res) => {\r\n                window.location.replace(`/collection/${collection_id}`)\r\n            })\r\n            .catch((err) => { console.log(err) });\r\n        })\r\n        .catch((err) => { console.log(err) })\r\n    }\r\n\r\n    useEffect( () => {\r\n        if (scheme.length === 0) {\r\n            axios.post('/api/collection/scheme', {coll_id: collection_id})\r\n            .then((res)=>{\r\n                setScheme(res.data)\r\n            })\r\n            .catch((err)=>{ })\r\n        }\r\n        if (!whiteList){\r\n            axios.get('/api/tag')\r\n            .then((res)=>{ let temp = []; res.data.forEach( (tag) => { temp.push(tag.name) }); setWhiteList(temp)})\r\n            .catch((err)=>{ console.log(err) })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"my-1 p-2 bg-dark text-light\">\r\n                <Form className=\"bg-dark text-light\" onSubmit={formSubmitHandle}>\r\n                    <Card.Title className=\"text-center my-4\"> {'Create new item'}</Card.Title>\r\n                    <Form.Row className=\"justify-content-center\">\r\n                        <Col lg={4}>\r\n                            <Form.Group>\r\n                                <DropImageBox onDrop={onDropHandle} successFlag={prevUrl} prev={prevUrl}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"justify-content-center\">\r\n                        <Col lg={6} className=\"align-middle\">\r\n                            <Form.Group >\r\n                                <Form.Label > Item Name: </Form.Label>\r\n                                <Form.Control\r\n                                    required={true}\r\n                                    onChange={formChangeHandle}\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    className=\"bg-dark text-light\"/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Tags\r\n                                    value=''\r\n                                    whitelist={whiteList}\r\n                                    onChange={tagsChangeHandle}\r\n                                    placeholder=\"Tags\"\r\n                                    className=\"form-control form-control-sm bg-dark text-light c-tag border-light\"/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"justify-content-center\">\r\n                        <CustomFields scheme={scheme} onChangeFunc={fieldsChangeHandle}/>\r\n                    </Form.Row>\r\n                    <Button variant=\"light\" type=\"submit\" className=\"float-right w-25\"> Create </Button>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionForm.jsx",["149","150","151","152"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport FormData from 'form-data'\r\nimport {Card, Form, Button, Col} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport Field from './Field'\r\nimport {AuthContext} from '../core/context';\r\nimport DropImageBox from '../drops/DropImageBox';\r\n\r\nexport default function CollectionForm() {\r\n    const {profile_name} = useParams(); // Перед этим возникает 404 // замменитть на пропс + переход после submit\r\n    const [loading, setLoading] = useState(false)\r\n    const [formData, setFormData] = useState({name: \"\", theme: \"\", discription: \"\"})\r\n    const [themes, setThemes] = useState([])\r\n    const [fields, setFields] = useState(new Array(15).fill(''))\r\n    const [fileCont, setFileCont] = useState()\r\n    const [prevUrl, setPrevUrl] = useState()\r\n\r\n\r\n    const onDropHandle = (afiles, rfiles, event) => {\r\n        if (afiles.length !== 0) {\r\n            let reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                let url = reader.result\r\n                setPrevUrl(url);\r\n            }\r\n            reader.readAsDataURL(afiles[0])\r\n            setFileCont(afiles)\r\n        }\r\n    }\r\n\r\n    const formChangeHandle = (event) => {\r\n        setFormData({...formData, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const fieldsChangeHandle = (event) => {\r\n        let tempFields = fields;\r\n        tempFields[parseInt(event.target.id)] = event.target.value;\r\n        setFields(tempFields)\r\n    }\r\n\r\n    const formSubmitHandle = (event) => {\r\n        event.preventDefault();\r\n        axios.post('/api/collection/create', {...formData, fields, profile_name})\r\n        .then((res) => {\r\n            const coll_id = res.data.coll_id;\r\n            const data = new FormData();\r\n            data.append(\"coll_id\", coll_id);\r\n            data.append('image', fileCont[0]);\r\n            const config = {headers: {'Content-Type': 'multipart/form-data'}};\r\n            axios.post('/api/collection/image', data, config)\r\n            .then((res) => {\r\n                window.location.replace(`/collection/${coll_id}`)\r\n            })\r\n            .catch((err) => { console.log(err) });\r\n        })\r\n        .catch((err) => { console.log(err) })\r\n    }\r\n\r\n    useEffect( () => {\r\n        if (themes.length === 0) {\r\n            axios.get('/api/themes')\r\n            .then((res) => { setThemes(res.data) })\r\n            .catch((err) => { console.log(err); })\r\n        }\r\n    }, [themes])\r\n\r\n    return (\r\n        <Card className=\"my-1 p-3 bg-dark text-light\">\r\n            <Form className=\"bg-dark text-light\" onSubmit={formSubmitHandle}>\r\n                <Form.Row>\r\n                    <Col lg={3}>\r\n                        <Form.Group className=\"bg-dark text-light\">\r\n                            <DropImageBox onDrop={onDropHandle} successFlag={prevUrl} prev={prevUrl}/>\r\n                            <Form.Text className=\"text-muted text-truncate mx-2\">\r\n                                {prevUrl ? '' : 'Please choice correct file ...'}\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col lg={1}></Col>\r\n                    <Col lg={8}>\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                                required={true}\r\n                                onChange={formChangeHandle}\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                name=\"name\"\r\n                                className=\"bg-dark text-light\"/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"form-inline\">\r\n                            <Form.Control\r\n                                required={true}\r\n                                onChange={formChangeHandle}\r\n                                as=\"select\"\r\n                                custom\r\n                                name=\"theme\"\r\n                                className=\"bg-dark text-light w-25\">\r\n                                    <option value=\"\" className=\"text-muted\">Theme ...</option>\r\n                                    {themes.map( (theme) => {\r\n                                        return <option value={theme}>{theme}</option>\r\n                                    } )}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                                onChange={formChangeHandle}\r\n                                as=\"textarea\"\r\n                                placeholder=\"Discription\"\r\n                                rows={3}\r\n                                style={{\"resize\":\"none\"}}\r\n                                name=\"discription\"\r\n                                className=\"bg-dark text-light\"/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Form.Row>\r\n\r\n            <Card.Title className=\"my-2\">Custom Fields:</Card.Title>\r\n            <Card.Text className=\"my-1 text-muted\">\r\n                Please enter the names of custom fields or leave the field blank\r\n            </Card.Text>\r\n            <Form inline>\r\n                {[\r\n                    'Numeric Field','Numeric Field','Numeric Field',\r\n                    'String Field','String Field','String Field',\r\n                    'Text Field','Text Field','Text Field',\r\n                    'Date Field','Date Field','Date Field',\r\n                    'Boolean Field','Boolean Field','Boolean Field'\r\n                ].map((field, index) => {\r\n                    return (<Field key={index} field={field} index={index} func={fieldsChangeHandle}/>)\r\n                })}\r\n            </Form>\r\n            <Button variant=\"light\" type=\"submit\" className=\"my-3 px-3 float-right w-25\">\r\n                Create\r\n            </Button>\r\n            </Form>\r\n        </Card>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/profile/ProfileCard.jsx",["153","154","155","156","157","158","159"],"import React, {useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Card, Row, Col, Image, Badge, Table} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport TableRowCollection from './TableRowCollection';\r\n\r\nexport default function ProfileCard(props) {\r\n    return (\r\n        <div>\r\n            <Card className=\"bg-dark text-light my-1\">\r\n                <Card.Header as=\"h5\">\r\n                    <span># {props.userData.username} </span>\r\n                    {props.userData.staff ? <Badge variant=\"warning\">admin</Badge> : ''}\r\n                    <span className=\"float-right\">{new Date(props.userData.created).toLocaleDateString()} </span>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Col lg={6}>\r\n                    <Table size='sm' variant='dark'>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td> Email: </td>\r\n                                <td>{props.userData.email} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td> Joined: </td>\r\n                                <td> {new Date(props.userData.created).toLocaleDateString()} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td> Colections: </td>\r\n                                <td> {props.userData.collections.length} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td> Status: </td>\r\n                                {props.userData.status ?\r\n                                <td><Badge variant=\"danger\">BANNED</Badge></td>\r\n                                :\r\n                                <td><Badge variant=\"success\">ALIVE</Badge></td>\r\n                                }\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    </Col>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/collection/Field.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/drops/DropImageBox.jsx",["160","161","162","163"],"import React from 'react';\r\nimport Dropzone, {useDropzone} from 'react-dropzone'\r\n\r\nexport default function DropImageBox(props) {\r\n    const {getRootProps, getInputProps, acceptedFiles, fileRejections} = useDropzone()\r\n    return (\r\n        <Dropzone\r\n            onDrop={props.onDrop}\r\n            onDragEnter={(event)=>{event.target.classList.toggle ('dropbox-active')}}\r\n            onDragLeave={(event)=>{event.target.classList.toggle ('dropbox-active')}}\r\n            accept=\"image/jpg, image/jpeg, image/png\"\r\n            maxFiles={1}\r\n            maxSize={500000}\r\n            >\r\n            {({getRootProps, getInputProps}) => (\r\n                <section className=\"text-center\">\r\n                    <div {...getRootProps()}\r\n                        className={props.prev ?\r\n                            \"rounded  dropbox dropbox-success mx-auto\":\r\n                            \"rounded  dropbox mx-auto\"}\r\n                        style={{\r\n                            \"background-position\": \"center\",\r\n                            \"background-size\": \"contain\",\r\n                            \"background-image\": `url(${props.prev})`,\r\n                            \"background-origin\": \"content-box\",\r\n                            \"background-repeat\": \"no-repeat\"\r\n                        }}\r\n                        >\r\n                        <input {...getInputProps()}/>\r\n                        {props.prev ? '' : <p> Click here  or drop image</p>}\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </Dropzone>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/items/CustomFields.jsx",["164","165","166","167","168","169","170","171","172","173","174"],"import React, {useEffect} from 'react';\r\nimport {Form, Col, Row,Container} from 'react-bootstrap';\r\n\r\nexport default function CustomFields(props) {\r\n    return (\r\n        <Container className=\"my-2\">\r\n\r\n            {props.scheme.slice(0,3).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index ? index : \"0\"}\r\n                            className=\"bg-dark text-light\"\r\n                            type=\"number\"\r\n                            />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(3,6).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 3}\r\n                            className=\"bg-dark text-light\" />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(6,9).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            rows={5}\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 6}\r\n                            className=\"bg-dark text-light unres\"\r\n                            as=\"textarea\" />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(9,12).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            placeholder=\"asdasd\"\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 9}\r\n                            className=\"bg-dark text-light text-center\"\r\n                            type=\"date\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(12,15).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Form.Check\r\n                        bsPrefix=\"text-center\"\r\n                        id={index + 12}\r\n                        onChange={props.onChangeFunc}\r\n                        label={field}/>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n        </Container>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentBox.jsx",["175","176"],"/mnt/h/XDev/Home/project-collections/client/src/items/Likes.jsx",["177","178","179"],"import React, {useState, useContext} from 'react';\r\nimport {Button, Badge, Overlay, Popover, OverlayTrigger} from 'react-bootstrap';\r\nimport {HandThumbsUp} from 'react-bootstrap-icons';\r\nimport axios from 'axios';\r\n\r\nimport {AuthContext} from '../core/context';\r\n\r\nexport default function Likes(props) {\r\n    const {isAuth, userId} = useContext(AuthContext);\r\n    const [likes, setLikes] = useState(props.startCount);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const likeHandle = () => {\r\n        if (isAuth) {\r\n            axios.post('/api/items/like', {user_id: userId, item_id: props.itemId})\r\n            .then((res)=>{setLikes(res.data.likes)})\r\n            .catch((err)=>{ console.log(err) })\r\n        }\r\n    }\r\n\r\n    const popover = (\r\n      <Popover id=\"popover-basic\"><Popover.Content>\r\n          <strong>You must be logged in!</strong>\r\n      </Popover.Content> </Popover>\r\n    )\r\n\r\n    return (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover} show={!isAuth}>\r\n            <Button variant=\"outline-light\" className=\"text-center px-1\" onClick={likeHandle}>\r\n                <HandThumbsUp size={24}/> <Badge variant=\"light\"> {likes} </Badge>\r\n            </Button>\r\n        </OverlayTrigger>\r\n    )\r\n}\r\n",{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":3,"column":30,"nodeType":"186","messageId":"187","endLine":3,"endColumn":33},{"ruleId":"184","severity":1,"message":"188","line":3,"column":35,"nodeType":"186","messageId":"187","endLine":3,"endColumn":38},{"ruleId":"184","severity":1,"message":"189","line":12,"column":12,"nodeType":"186","messageId":"187","endLine":12,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":34,"column":8,"nodeType":"192","endLine":34,"endColumn":10,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":30,"column":17,"nodeType":"196","endLine":30,"endColumn":76},{"ruleId":"190","severity":1,"message":"197","line":34,"column":8,"nodeType":"192","endLine":34,"endColumn":10,"suggestions":"198"},{"ruleId":"190","severity":1,"message":"199","line":28,"column":7,"nodeType":"192","endLine":28,"endColumn":9,"suggestions":"200"},{"ruleId":"190","severity":1,"message":"201","line":21,"column":8,"nodeType":"192","endLine":21,"endColumn":10,"suggestions":"202"},{"ruleId":"184","severity":1,"message":"189","line":7,"column":12,"nodeType":"186","messageId":"187","endLine":7,"endColumn":18},{"ruleId":"184","severity":1,"message":"203","line":2,"column":15,"nodeType":"186","messageId":"187","endLine":2,"endColumn":21},{"ruleId":"184","severity":1,"message":"204","line":2,"column":47,"nodeType":"186","messageId":"187","endLine":2,"endColumn":54},{"ruleId":"184","severity":1,"message":"205","line":3,"column":9,"nodeType":"186","messageId":"187","endLine":3,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":44,"column":98,"nodeType":"208","messageId":"209","endLine":44,"endColumn":100},{"ruleId":"206","severity":1,"message":"207","line":50,"column":99,"nodeType":"208","messageId":"209","endLine":50,"endColumn":101},{"ruleId":"206","severity":1,"message":"207","line":56,"column":100,"nodeType":"208","messageId":"209","endLine":56,"endColumn":102},{"ruleId":"206","severity":1,"message":"207","line":68,"column":82,"nodeType":"208","messageId":"209","endLine":68,"endColumn":84},{"ruleId":"210","severity":1,"message":"211","line":8,"column":17,"nodeType":"196","endLine":8,"endColumn":29},{"ruleId":"210","severity":1,"message":"211","line":10,"column":17,"nodeType":"196","endLine":10,"endColumn":29},{"ruleId":"184","severity":1,"message":"212","line":13,"column":12,"nodeType":"186","messageId":"187","endLine":13,"endColumn":18},{"ruleId":"190","severity":1,"message":"213","line":99,"column":8,"nodeType":"192","endLine":99,"endColumn":10,"suggestions":"214"},{"ruleId":"184","severity":1,"message":"215","line":1,"column":16,"nodeType":"186","messageId":"187","endLine":1,"endColumn":26},{"ruleId":"184","severity":1,"message":"216","line":8,"column":9,"nodeType":"186","messageId":"187","endLine":8,"endColumn":20},{"ruleId":"184","severity":1,"message":"217","line":13,"column":12,"nodeType":"186","messageId":"187","endLine":13,"endColumn":19},{"ruleId":"184","severity":1,"message":"218","line":13,"column":21,"nodeType":"186","messageId":"187","endLine":13,"endColumn":31},{"ruleId":"184","severity":1,"message":"219","line":1,"column":16,"nodeType":"186","messageId":"187","endLine":1,"endColumn":24},{"ruleId":"184","severity":1,"message":"220","line":1,"column":26,"nodeType":"186","messageId":"187","endLine":1,"endColumn":35},{"ruleId":"184","severity":1,"message":"221","line":2,"column":9,"nodeType":"186","messageId":"187","endLine":2,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":3,"column":15,"nodeType":"186","messageId":"187","endLine":3,"endColumn":18},{"ruleId":"184","severity":1,"message":"222","line":3,"column":25,"nodeType":"186","messageId":"187","endLine":3,"endColumn":30},{"ruleId":"184","severity":1,"message":"223","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":13},{"ruleId":"184","severity":1,"message":"224","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":26},{"ruleId":"184","severity":1,"message":"225","line":5,"column":12,"nodeType":"186","messageId":"187","endLine":5,"endColumn":24},{"ruleId":"184","severity":1,"message":"226","line":5,"column":26,"nodeType":"186","messageId":"187","endLine":5,"endColumn":39},{"ruleId":"184","severity":1,"message":"227","line":5,"column":41,"nodeType":"186","messageId":"187","endLine":5,"endColumn":54},{"ruleId":"184","severity":1,"message":"228","line":5,"column":56,"nodeType":"186","messageId":"187","endLine":5,"endColumn":70},{"ruleId":"184","severity":1,"message":"220","line":1,"column":16,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"206","severity":1,"message":"207","line":8,"column":55,"nodeType":"208","messageId":"209","endLine":8,"endColumn":57},{"ruleId":"229","severity":1,"message":"230","line":8,"column":69,"nodeType":"231","messageId":"232","endLine":8,"endColumn":71},{"ruleId":"206","severity":1,"message":"207","line":23,"column":55,"nodeType":"208","messageId":"209","endLine":23,"endColumn":57},{"ruleId":"229","severity":1,"message":"230","line":23,"column":69,"nodeType":"231","messageId":"232","endLine":23,"endColumn":71},{"ruleId":"206","severity":1,"message":"207","line":36,"column":55,"nodeType":"208","messageId":"209","endLine":36,"endColumn":57},{"ruleId":"229","severity":1,"message":"230","line":36,"column":69,"nodeType":"231","messageId":"232","endLine":36,"endColumn":71},{"ruleId":"206","severity":1,"message":"207","line":51,"column":56,"nodeType":"208","messageId":"209","endLine":51,"endColumn":58},{"ruleId":"229","severity":1,"message":"230","line":51,"column":70,"nodeType":"231","messageId":"232","endLine":51,"endColumn":72},{"ruleId":"206","severity":1,"message":"207","line":66,"column":57,"nodeType":"208","messageId":"209","endLine":66,"endColumn":59},{"ruleId":"229","severity":1,"message":"230","line":66,"column":71,"nodeType":"231","messageId":"232","endLine":66,"endColumn":73},{"ruleId":"184","severity":1,"message":"204","line":2,"column":19,"nodeType":"186","messageId":"187","endLine":2,"endColumn":26},{"ruleId":"190","severity":1,"message":"233","line":31,"column":8,"nodeType":"192","endLine":31,"endColumn":22,"suggestions":"234"},{"ruleId":"184","severity":1,"message":"235","line":2,"column":24,"nodeType":"186","messageId":"187","endLine":2,"endColumn":31},{"ruleId":"184","severity":1,"message":"236","line":11,"column":12,"nodeType":"186","messageId":"187","endLine":11,"endColumn":16},{"ruleId":"184","severity":1,"message":"237","line":11,"column":18,"nodeType":"186","messageId":"187","endLine":11,"endColumn":25},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'isAuth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAdmin', 'profileUserName', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["240"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'largeColls', 'lastItems', and 'tagCloud'. Either include them or remove the dependency array.",["241"],"React Hook useEffect has missing dependencies: 'collId' and 'collection'. Either include them or remove the dependency array.",["242"],"React Hook useEffect has missing dependencies: 'items.length' and 'tag_name'. Either include them or remove the dependency array.",["243"],"'Button' is defined but never used.","'Spinner' is defined but never used.","'HandThumbsUp' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'collection_id', 'scheme.length', and 'whiteList'. Either include them or remove the dependency array.",["244"],"'useContext' is defined but never used.","'AuthContext' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'Image' is defined but never used.","'axios' is defined but never used.","'TableRowCollection' is defined but never used.","'getRootProps' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'acceptedFiles' is assigned a value but never used.","'fileRejections' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'firstLoad', 'getComments', and 'intID'. Either include them or remove the dependency array.",["245"],"'Overlay' is defined but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [isAdmin, profileUserName, username]",{"range":"258","text":"259"},"Update the dependencies array to be: [largeColls, lastItems, tagCloud]",{"range":"260","text":"261"},"Update the dependencies array to be: [collId, collection]",{"range":"262","text":"263"},"Update the dependencies array to be: [items.length, tag_name]",{"range":"264","text":"265"},"Update the dependencies array to be: [collection_id, scheme.length, whiteList]",{"range":"266","text":"267"},"Update the dependencies array to be: [firstLoad, getComments, intID, props.isOpen]",{"range":"268","text":"269"},[1137,1139],"[isAdmin, profileUserName, username]",[1148,1150],"[largeColls, lastItems, tagCloud]",[933,935],"[collId, collection]",[643,645],"[items.length, tag_name]",[3682,3684],"[collection_id, scheme.length, whiteList]",[1036,1050],"[firstLoad, getComments, intID, props.isOpen]"]