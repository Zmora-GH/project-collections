[{"/mnt/h/XDev/Home/project-collections/client/src/index.js":"1","/mnt/h/XDev/Home/project-collections/client/src/reportWebVitals.js":"2","/mnt/h/XDev/Home/project-collections/client/src/App.js":"3","/mnt/h/XDev/Home/project-collections/client/src/auth/Login.jsx":"4","/mnt/h/XDev/Home/project-collections/client/src/auth/Signup.jsx":"5","/mnt/h/XDev/Home/project-collections/client/src/admin/Admin.jsx":"6","/mnt/h/XDev/Home/project-collections/client/src/admin/TableRow.jsx":"7","/mnt/h/XDev/Home/project-collections/client/src/profile/Profile.jsx":"8","/mnt/h/XDev/Home/project-collections/client/src/profile/TableRowCollection.jsx":"9","/mnt/h/XDev/Home/project-collections/client/src/main/Main.jsx":"10","/mnt/h/XDev/Home/project-collections/client/src/core/context.jsx":"11","/mnt/h/XDev/Home/project-collections/client/src/collection/Collection.jsx":"12","/mnt/h/XDev/Home/project-collections/client/src/items/ItemList.jsx":"13","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentForm.jsx":"14","/mnt/h/XDev/Home/project-collections/client/src/comments/Comment.jsx":"15","/mnt/h/XDev/Home/project-collections/client/src/items/ItemPrev.jsx":"16","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionPrev.jsx":"17","/mnt/h/XDev/Home/project-collections/client/src/items/Item.jsx":"18","/mnt/h/XDev/Home/project-collections/client/src/main/Footer.jsx":"19","/mnt/h/XDev/Home/project-collections/client/src/main/Header.jsx":"20","/mnt/h/XDev/Home/project-collections/client/src/items/ItemForm.jsx":"21","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionForm.jsx":"22","/mnt/h/XDev/Home/project-collections/client/src/profile/ProfileCard.jsx":"23","/mnt/h/XDev/Home/project-collections/client/src/collection/Field.jsx":"24","/mnt/h/XDev/Home/project-collections/client/src/drops/DropImageBox.jsx":"25","/mnt/h/XDev/Home/project-collections/client/src/items/CustomFields.jsx":"26","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentBox.jsx":"27"},{"size":287,"mtime":1609254632790,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1609251387818,"results":"30","hashOfConfig":"29"},{"size":2093,"mtime":1610125672445,"results":"31","hashOfConfig":"29"},{"size":2753,"mtime":1609592268716,"results":"32","hashOfConfig":"29"},{"size":2649,"mtime":1609590547651,"results":"33","hashOfConfig":"29"},{"size":3942,"mtime":1609685475150,"results":"34","hashOfConfig":"29"},{"size":794,"mtime":1609599149741,"results":"35","hashOfConfig":"29"},{"size":2308,"mtime":1610124705230,"results":"36","hashOfConfig":"29"},{"size":1392,"mtime":1610127057562,"results":"37","hashOfConfig":"29"},{"size":3236,"mtime":1610280667861,"results":"38","hashOfConfig":"29"},{"size":256,"mtime":1609593926240,"results":"39","hashOfConfig":"29"},{"size":1950,"mtime":1610280528183,"results":"40","hashOfConfig":"29"},{"size":1103,"mtime":1609865429706,"results":"41","hashOfConfig":"29"},{"size":845,"mtime":1609360451100,"results":"42","hashOfConfig":"29"},{"size":627,"mtime":1610277071873,"results":"43","hashOfConfig":"29"},{"size":2102,"mtime":1610272914310,"results":"44","hashOfConfig":"29"},{"size":1817,"mtime":1610280756900,"results":"45","hashOfConfig":"29"},{"size":5047,"mtime":1610280577287,"results":"46","hashOfConfig":"29"},{"size":424,"mtime":1610281396389,"results":"47","hashOfConfig":"29"},{"size":2521,"mtime":1610026397039,"results":"48","hashOfConfig":"29"},{"size":5751,"mtime":1610201613741,"results":"49","hashOfConfig":"29"},{"size":5967,"mtime":1610191776580,"results":"50","hashOfConfig":"29"},{"size":1677,"mtime":1609692656839,"results":"51","hashOfConfig":"29"},{"size":584,"mtime":1609865235110,"results":"52","hashOfConfig":"29"},{"size":1559,"mtime":1610027352706,"results":"53","hashOfConfig":"29"},{"size":3284,"mtime":1610199687124,"results":"54","hashOfConfig":"29"},{"size":818,"mtime":1610280538416,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"blk22b",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"58"},"/mnt/h/XDev/Home/project-collections/client/src/index.js",[],["125","126"],"/mnt/h/XDev/Home/project-collections/client/src/reportWebVitals.js",[],"/mnt/h/XDev/Home/project-collections/client/src/App.js",[],"/mnt/h/XDev/Home/project-collections/client/src/auth/Login.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/auth/Signup.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/admin/Admin.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/admin/TableRow.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/profile/Profile.jsx",["127","128","129","130"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Table, Button, Card, Row, Col} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport {AuthContext} from '../core/context';\r\n\r\nimport ProfileCard from './ProfileCard';\r\nimport TableRowCollection from './TableRowCollection';\r\n\r\nexport default function Profile(props) {\r\n    const { profileUserName } = useParams()\r\n    const [collections, setCollections] = useState([])\r\n    const {isAuth, isAdmin, username} = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        if (isAdmin || profileUserName === username) {\r\n            axios.post('/api/profile/collections', { \"username\": profileUserName})\r\n            .then((res)=>{\r\n                setCollections(res.data);\r\n            })\r\n            .catch((err)=>{console.log(err)})\r\n        }\r\n\r\n    }, [])\r\n    console.log(collections);\r\n    return (\r\n        <div>\r\n            <ProfileCard username={profileUserName} isAuth={isAdmin || profileUserName === username}/>\r\n            <Card>\r\n                <Card.Header as=\"h5\">Collections:</Card.Header>\r\n                <Card.Body>\r\n                    <Button\r\n                        variant=\"success\"\r\n                        as=\"a\"\r\n                        href= {`/collection/create/${profileUserName}`}\r\n                        >Create new collection</Button>\r\n                </Card.Body>\r\n                <Card.Body>\r\n                    <Table size=\"sm\" striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Image</th>\r\n                                <th>Name</th>\r\n                                <th>Theme</th>\r\n                                <th>Items</th>\r\n                                <th>Created</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { collections.map( (coll, index) => {\r\n                                return <TableRowCollection  data={coll} key={index}/>\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/profile/TableRowCollection.jsx",["131"],"import React from 'react';\r\nimport {Button, ButtonGroup } from 'react-bootstrap';\r\nimport {TrashFill,PenFill} from 'react-bootstrap-icons';\r\n\r\nexport default function TableRowCollection(props) {\r\n    // TODO: delete and edit button\r\n    return (\r\n        <tr>\r\n            <td className=\"ctd\">\r\n                <ButtonGroup >\r\n                  <Button size=\"sm\" variant=\"info\" >\r\n                      <PenFill color=\"white\" className=\"mx-2\"/>\r\n                  </Button>\r\n                  <Button size=\"sm\" variant=\"danger\" >\r\n                      <TrashFill color=\"white\" />\r\n                  </Button>\r\n                  <Button size=\"sm\" variant=\"success\" as=\"a\" href={ `/collection/create_item/${props.data._id}` }>\r\n                      <PenFill color=\"white\" />\r\n                  </Button>\r\n                </ButtonGroup>\r\n            </td>\r\n            <td className=\"ctd\">\r\n                <img src={'/static' + props.data.image_url} height=\"60px\"/>\r\n            </td>\r\n            <td className=\"ctd\">\r\n                <a className=\"text-decoration-none\" href={`/collection/${props.data._id}`} >{props.data.name}</a>\r\n            </td>\r\n            <td className=\"ctd\">{props.data.theme}</td>\r\n            <td className=\"ctd\">{props.data.items.length}</td>\r\n            <td className=\"ctd\">{new Date(props.data.created).toLocaleDateString()}</td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/main/Main.jsx",["132"],"import React from 'react';\r\nimport {CardColumns, Row, Col, Container} from 'react-bootstrap';\r\n\r\nimport ItemPrev from '../items/ItemPrev';\r\nimport CollectionPrev from '../collection/CollectionPrev';\r\n\r\nexport default function Main() {\r\n\r\n    return (\r\n        <Container fluid className=\"my-2 bg-dark text-light\">\r\n            <Row>\r\n                <Col lg={10}>\r\n                    <Row className=\"mb-4 justify-content-center\">\r\n                        <Col lg={12}><h4> Last added items:</h4></Col>\r\n                        <Col lg={4} className=\"my-1\"><ItemPrev /></Col>\r\n                        <Col lg={4} className=\"my-1\"><ItemPrev /></Col>\r\n                        <Col lg={4} className=\"my-1\"><ItemPrev /></Col>\r\n                    </Row>\r\n                    <Row className=\"mb-4 justify-content-center\">\r\n                        <Col lg={12}><h4> Top collections an week:</h4></Col>\r\n                        <Col lg={12} className=\"my-1\"><CollectionPrev /></Col>\r\n                        <Col lg={12} className=\"my-1\"><CollectionPrev /></Col>\r\n                        <Col lg={12} className=\"my-1\"><CollectionPrev /></Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col lg={1}>\r\n                    <div className=\"my-2\">\r\n                        <h5> Tags: </h5>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">a1</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">a3</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">aa 33 aa</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">ff ddd</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">asd sd asdas asda</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">asd  dd dd</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">a1</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">a3</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">aa 33 aa</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">ff ddd</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">asd sd asdas asda</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">asd  dd dd</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">a1</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">a3</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">aa 33 aa</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">ff ddd</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">asd sd asdas asda</a>\r\n                        <a href=\"/items/asdsdasdasd\" class=\"badge badge-secondary mx-1\">asd  dd dd</a>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/core/context.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/collection/Collection.jsx",["133","134","135","136","137"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Carousel, Card, Button, Col, Row, Accordion } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport Item from '../items/Item';\r\nimport {AuthContext} from '../core/context';\r\n\r\nexport default function Collection() {\r\n    const {collId} = useParams();\r\n    const {isAuth, isAdmin} = useContext(AuthContext);\r\n    const [items, setItems] = useState([])\r\n\r\n    useEffect(()=>{\r\n        if (items.length === 0) {\r\n            // TODO:  GET ITEMS GET COLLNAME\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <Card className=\"bg-dark text-light m-1 p-2\">\r\n            {isAuth || isAdmin ?\r\n                <Card.Title>\r\n                    <span> NAME OF COLL: {collId} </span>\r\n                    <Button size=\"sm\" variant=\"outline-light\" className=\"float-right mx-1 px-2\">Edit Collection</Button>\r\n                    <Button size=\"sm\" variant=\"outline-light\" className=\"float-right mx-1 px-2\">Add Item</Button>\r\n                </Card.Title>\r\n            :\r\n                <Card.Title>  NAME OF COLL: {collId} </Card.Title>\r\n            }\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col lg={3}>\r\n                        <Card.Img src=\"https://images.freeimages.com/images/large-previews/10a/coins-1239681.jpg\"/>\r\n                        <strong className=\"\"># USERNAME</strong>\r\n                        <br/>\r\n                        <small className=\"text-muted\">20 20 20</small>\r\n                        <br/>\r\n                        <p className=\"\">DESCRIPTION</p>\r\n                        <div className=\"border-bottom\"></div>\r\n                    </Col>\r\n                    <Col lg={9} className=\"\">\r\n                        <Row><Item /></Row>\r\n                        <Row><Item /></Row>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/items/ItemList.jsx",["138"],"import React, {useContext} from 'react';\r\nimport {Card, Row, Col} from 'react-bootstrap';\r\n\r\n//import {AuthContext} from '../core/context';\r\nimport ItemPrev from './ItemPrev';\r\n\r\nexport default function ItemList() {\r\n    //const {isAuth, isAdmin} = useContext(AuthContext);\r\n\r\n    return (\r\n        <Card className=\"my-1 pt-3 border-secondary bg-light\">\r\n            <Card.Title className=\"ml-3\">All items with \"TAG/SEARCH\": </Card.Title>\r\n            <Card.Body>\r\n                <Row>\r\n                <Col lg={4}>\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                </Col>\r\n                <Col lg={4}>\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                </Col>\r\n                <Col lg={4}>\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentForm.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/comments/Comment.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/items/ItemPrev.jsx",["139"],"import React from 'react';\r\nimport {Card, Button, Badge, Col, Row, Image } from 'react-bootstrap';\r\nimport {HandThumbsUp} from 'react-bootstrap-icons';\r\n\r\nexport default function ItemPrev() {\r\n    // TODO: Редирект на страницу коллекции и якорь на конкретный итем\r\n    return (\r\n        <Card\r\n            border=\"light\"\r\n            bg=\"dark\"\r\n            text=\"light\"\r\n            role=\"button\"\r\n            onClick={ () => { window.location.replace(\"/collection/3#1\") } }>\r\n\r\n            <Card.Title>ITEM NAME</Card.Title>\r\n            <Card.Body>\r\n                <Row>\r\n                    <Image\r\n                        rounded\r\n                        fluid\r\n                        variant=\"top\"\r\n                        src=\"https://images.freeimages.com/images/large-previews/10a/coins-1239681.jpg\"/>\r\n                </Row>\r\n                <Row>\r\n                    <Card.Text>\r\n                        This is a wider card with supporting text below as a natural lead-in to\r\n                        additional content.\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        This is a wider card with supporting text below as a natural lead-in to\r\n                        additional content.\r\n                    </Card.Text>\r\n                    <Badge className=\"mx-1\" variant=\"light\"> tag1 </Badge>\r\n                    <Badge className=\"mx-1\" variant=\"light\"> tag1 </Badge>\r\n                    <Badge className=\"mx-1\" variant=\"light\"> tag1 </Badge>\r\n                    <Badge className=\"mx-1\" variant=\"light\"> tag1 </Badge>\r\n                    <Badge className=\"mx-1\" variant=\"light\"> tag1 </Badge>\r\n                    <Badge className=\"mx-1\" variant=\"light\"> tag1 </Badge>\r\n                </Row>\r\n\r\n</Card.Body>\r\n\r\n            <Card.Footer className=\"text-center\">\r\n                <Button size='sm' variant=\"outline-light\">\r\n                    <HandThumbsUp size={20}/> <Badge variant=\"light\"> 963 </Badge>\r\n                </Button>\r\n            </Card.Footer>\r\n        </Card>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionPrev.jsx",["140"],"import React from 'react';\r\nimport {Card, Button, Col, Row, Image} from 'react-bootstrap';\r\n\r\nexport default function CollectionPrev(props) {\r\n    //props or params for get id // link\r\n    // id\r\n    // image url\r\n    // description\r\n    // item count\r\n    return (\r\n        <Card\r\n            border=\"light\"\r\n            bg=\"dark\"\r\n            text=\"white\"\r\n            role=\"button\"\r\n            onClick={()=>{window.location.replace(\"/collection/3\")}}\r\n        >\r\n            <Card.Title >COLL NAME</Card.Title>\r\n\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <Image\r\n                            rounded\r\n                            fluid\r\n                            variant=\"top\"\r\n                            src=\"https://images.freeimages.com/images/large-previews/10a/coins-1239681.jpg\"/>\r\n\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                        <Card.Text>\r\n                            DESCRIPTION\r\n                            tags_idasd\r\n                            tags_idasd\r\n                            asdasdasdasda\r\n                            asdasdasdasdaloren\r\n                            1231231 asdas dasdasda sdasdasdasd  asdas\r\n                            as asd asdasdasdasdas  asdasdasdas as asdasdas asdasdasdas\r\n                            a as\r\n                             asdasdasdasdasd\r\n                              asdasdasdasdasd\r\n\r\n                        </Card.Text>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <small className=\"text-muted\">  20-20-2020   </small>\r\n                <strong className=\"text-muted float-right \"> # USERNAME </strong>\r\n            </Card.Footer>\r\n        </Card>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/items/Item.jsx",["141"],"import React from 'react';\r\nimport {Card, Col, Row, Button, Badge, Table, Spinner, Tab, Tabs} from 'react-bootstrap';\r\nimport {HandThumbsUp} from 'react-bootstrap-icons';\r\n\r\nimport CommentBox from '../comments/CommentBox';\r\n\r\nexport default function Item() {\r\n    // TODO: Сначала загр контент потом коменты\r\n    return (\r\n        <Card border=\"light\" bg=\"dark\" text=\"light\" className=\"my-2 mx-auto\">\r\n            <Card.Title className='p-1'>\r\n                <span>SOME ITEM TITLE</span>\r\n                <Button size=\"sm\" variant=\"outline-light\" className=\"float-right mx-1 px-2\">Edit</Button>\r\n            </Card.Title>\r\n            <Card.Body>\r\n                <Tabs defaultActiveKey=\"item\" className=\"mx-auto\" >\r\n                    <Tab eventKey=\"item\" title=\"Item\">\r\n                        <Row className=\"mt-4\">\r\n                            <Col md={5}>\r\n                                <Card.Img\r\n                                    variant=\"top\"\r\n                                    src=\"https://images.freeimages.com/images/large-previews/10a/coins-1239681.jpg\"\r\n                                    fluid\r\n                                    rounded\r\n                                    className=\"border border-secondary\"\r\n                                    />\r\n                                <Badge className=\"mx-1\" variant=\"light\"> tag1 </Badge>\r\n                                <Badge className=\"mx-1\" variant=\"light\"> tag1 </Badge>\r\n                                <Badge className=\"mx-1\" variant=\"light\"> tag1 </Badge>\r\n                            </Col>\r\n                            <Col md={7}>\r\n                                <Card.Body>\r\n                                    <Table size=\"sm\" borderless striped variant=\"dark\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"font-weight-bold\">01 some field:</td>\r\n                                                <td> -01 some value </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"font-weight-bold\">02 some field:</td>\r\n                                                <td> -01 some value </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"font-weight-bold\">03 some field:</td>\r\n                                                <td> -01 some value </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"font-weight-bold\">04 some field:</td>\r\n                                                <td> -01 some value </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"font-weight-bold\">05 some field:</td>\r\n                                                <td> -01 some value </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"font-weight-bold\">06 some field:</td>\r\n                                                <td> -01 some value </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td colSpan=\"2\">Text Description Long Text Description Long Text Description Long Text Description Long\r\n                                                    Text Description Long Text Description Long Text Description Long Text Description Long Text Description Long\r\n                                                    Text Description LongText Description Long Text Description Long\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Card.Body>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mb-3\">\r\n                            <Col md={12} className=\"text-center\">\r\n                                <Button variant=\"outline-light\" className=\"text-center px-1\">\r\n                                    <HandThumbsUp size={24}/> <Badge variant=\"light\"> 935 </Badge>\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Tab>\r\n                    <Tab eventKey=\"comments\" title=\"Comments\">\r\n                            <Card.Body>\r\n                            <CommentBox />\r\n                            </Card.Body>\r\n\r\n                    </Tab>\r\n                </Tabs>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/main/Footer.jsx",["142","143"],"/mnt/h/XDev/Home/project-collections/client/src/main/Header.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/items/ItemForm.jsx",["144","145"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {Card, Form, Button, Col} from 'react-bootstrap';\r\nimport {useParams} from \"react-router-dom\";\r\nimport Tags from \"@yaireo/tagify/dist/react.tagify\"\r\nimport axios from 'axios';\r\n\r\nimport {AuthContext} from '../core/context';\r\nimport DropImageBox from '../drops/DropImageBox';\r\nimport CustomFields from './CustomFields';\r\n\r\nexport default function ItemForm() {\r\n    const {collection_id} = useParams();\r\n    const {userId} = useContext(AuthContext);\r\n    const [scheme, setScheme] = useState([])\r\n    const [inputTags, setInputTags] = useState([])\r\n    const [whiteList, setWhiteList] = useState()\r\n    const [formData, setFormData] = useState({name: \"\"})\r\n    const [fieldsData, setFieldsData] = useState(new Array(15).fill(false))\r\n    const [prevUrl, setPrevUrl] = useState()\r\n    const [fileCont, setFileCont] = useState()\r\n\r\n    const onDropHandle = (afiles, rfiles, event) => {\r\n        if (afiles.length !== 0) {\r\n            let reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                let url = reader.result\r\n                setPrevUrl(url);\r\n            }\r\n            reader.readAsDataURL(afiles[0])\r\n            setFileCont(afiles)\r\n        }\r\n    }\r\n\r\n    const tagsChangeHandle = (event) => {\r\n        event.persist();\r\n        let tags = []\r\n        let data = event.target.value ? JSON.parse(event.target.value): []\r\n        for (let i in data) {\r\n            tags.push(data[i].value);\r\n        }\r\n        setInputTags(tags);\r\n    }\r\n\r\n    const formChangeHandle = (event) => {\r\n        setFormData({...formData, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const fieldsChangeHandle = (event) => {\r\n        let tempData = fieldsData;\r\n        if (event.target.type === \"checkbox\") {\r\n            tempData[parseInt(event.target.id)] = event.target.checked;\r\n        } else if (event.target.type === \"number\") {\r\n            tempData[parseInt(event.target.id)] = parseInt(event.target.value);\r\n        } else if (event.target.type === \"date\") {\r\n            tempData[parseInt(event.target.id)] = new Date(event.target.value);\r\n        } else {\r\n            tempData[parseInt(event.target.id)] = event.target.value;\r\n        }\r\n        setFieldsData(tempData)\r\n    }\r\n\r\n    const formSubmitHandle = (event) => {\r\n        event.preventDefault();\r\n        axios.post('/api/collection/add', {\r\n            name: formData.name,\r\n            fields: fieldsData,\r\n            coll_id: collection_id,\r\n            tags: inputTags,\r\n            scheme: scheme\r\n        })\r\n        .then((res) => {\r\n            const item_id = res.data.item_id;\r\n            const data = new FormData();\r\n            data.append(\"item_id\", item_id);\r\n            data.append('image', fileCont[0]);\r\n            const config = {headers: {'Content-Type': 'multipart/form-data'}};\r\n            axios.post('/api/collection/image', data, config)\r\n            .catch((err) => { console.log(err) });\r\n        })\r\n        .catch((err) => { console.log(err) })\r\n    }\r\n\r\n    useEffect( () => {\r\n        if (scheme.length === 0) {\r\n            axios.post('/api/collection/scheme', {coll_id: collection_id})\r\n            .then((res)=>{\r\n                setScheme(res.data)\r\n            })\r\n            .catch((err)=>{ })\r\n        }\r\n        if (!whiteList){\r\n            axios.get('/api/tag')\r\n            .then((res)=>{ let temp = []; res.data.forEach( (tag) => { temp.push(tag.name) }); setWhiteList(temp)})\r\n            .catch((err)=>{ console.log(err) })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"my-1 p-2 bg-dark text-light\">\r\n                <Form className=\"bg-dark text-light\" onSubmit={formSubmitHandle}>\r\n                    <Card.Title className=\"text-center mb-3\"> {`Create new item for COLL: ${collection_id}`}</Card.Title>\r\n                    <Form.Row className=\"justify-content-center\">\r\n                        <Col lg={4}>\r\n                            <Form.Group>\r\n                                <DropImageBox onDrop={onDropHandle} successFlag={prevUrl} prev={prevUrl}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"justify-content-center\">\r\n                        <Col lg={6} className=\"align-middle\">\r\n                            <Form.Group >\r\n                                <Form.Label > Item Name: </Form.Label>\r\n                                <Form.Control\r\n                                    required={true}\r\n                                    onChange={formChangeHandle}\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    className=\"bg-dark text-light\"/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Tags\r\n                                    value=''\r\n                                    whitelist={whiteList}\r\n                                    onChange={tagsChangeHandle}\r\n                                    placeholder=\"Tags\"\r\n                                    className=\"form-control form-control-sm bg-dark text-light c-tag border-light\"/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"justify-content-center\">\r\n                        <CustomFields scheme={scheme} onChangeFunc={fieldsChangeHandle}/>\r\n                    </Form.Row>\r\n                    <Button variant=\"light\" type=\"submit\" className=\"float-right w-25\"> Create </Button>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionForm.jsx",["146","147","148","149"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport FormData from 'form-data'\r\nimport {Card, Form, Button, Col} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport Field from './Field'\r\nimport {AuthContext} from '../core/context';\r\nimport DropImageBox from '../drops/DropImageBox';\r\n\r\nexport default function CollectionForm() {\r\n    const {profile_name} = useParams(); // Перед этим возникает 404 // замменитть на пропс + переход после submit\r\n    const [loading, setLoading] = useState(false)\r\n    const [formData, setFormData] = useState({name: \"\", theme: \"\", discription: \"\"})\r\n    const [themes, setThemes] = useState([])\r\n    const [fields, setFields] = useState(new Array(15).fill(''))\r\n    const [fileCont, setFileCont] = useState()\r\n    const [prevUrl, setPrevUrl] = useState()\r\n\r\n\r\n    const onDropHandle = (afiles, rfiles, event) => {\r\n        if (afiles.length !== 0) {\r\n            let reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                let url = reader.result\r\n                setPrevUrl(url);\r\n            }\r\n            reader.readAsDataURL(afiles[0])\r\n            setFileCont(afiles)\r\n        }\r\n    }\r\n\r\n    const formChangeHandle = (event) => {\r\n        setFormData({...formData, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const fieldsChangeHandle = (event) => {\r\n        let tempFields = fields;\r\n        tempFields[parseInt(event.target.id)] = event.target.value;\r\n        setFields(tempFields)\r\n    }\r\n\r\n    const formSubmitHandle = (event) => {\r\n        event.preventDefault();\r\n        axios.post('/api/collection/create', {...formData, fields, profile_name})\r\n        .then((res) => {\r\n            const coll_id = res.data.coll_id;\r\n            const data = new FormData();\r\n            data.append(\"coll_id\", coll_id);\r\n            data.append('image', fileCont[0]);\r\n            const config = {headers: {'Content-Type': 'multipart/form-data'}};\r\n            axios.post('/api/collection/image', data, config)\r\n            .catch((err) => { console.log(err) });\r\n        })\r\n        .catch((err) => { console.log(err) })\r\n    }\r\n\r\n    useEffect( () => {\r\n        if (themes.length === 0) {\r\n            axios.get('/api/themes')    \r\n            .then((res) => { setThemes(res.data) })\r\n            .catch((err) => { console.log(err); })\r\n        }\r\n    }, [themes])\r\n\r\n    return (\r\n        <Card className=\"my-1 p-3 bg-dark text-light\">\r\n            <Form className=\"bg-dark text-light\" onSubmit={formSubmitHandle}>\r\n                <Form.Row>\r\n                    <Col lg={3}>\r\n                        <Form.Group className=\"bg-dark text-light\">\r\n                            <DropImageBox onDrop={onDropHandle} successFlag={prevUrl} prev={prevUrl}/>\r\n                            <Form.Text className=\"text-muted text-truncate mx-2\">\r\n                                {prevUrl ? '' : 'Please choice correct file ...'}\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col lg={1}></Col>\r\n                    <Col lg={8}>\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                                required={true}\r\n                                onChange={formChangeHandle}\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                name=\"name\"\r\n                                className=\"bg-dark text-light\"/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"form-inline\">\r\n                            <Form.Control\r\n                                required={true}\r\n                                onChange={formChangeHandle}\r\n                                as=\"select\"\r\n                                custom\r\n                                name=\"theme\"\r\n                                className=\"bg-dark text-light w-25\">\r\n                                    <option value=\"\" className=\"text-muted\">Theme ...</option>\r\n                                    {themes.map( (theme) => {\r\n                                        return <option value={theme}>{theme}</option>\r\n                                    } )}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                                onChange={formChangeHandle}\r\n                                as=\"textarea\"\r\n                                placeholder=\"Discription\"\r\n                                rows={3}\r\n                                style={{\"resize\":\"none\"}}\r\n                                name=\"discription\"\r\n                                className=\"bg-dark text-light\"/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Form.Row>\r\n\r\n            <Card.Title className=\"my-2\">Custom Fields:</Card.Title>\r\n            <Card.Text className=\"my-1 text-muted\">\r\n                Please enter the names of custom fields or leave the field blank\r\n            </Card.Text>\r\n            <Form inline>\r\n                {[\r\n                    'Numeric Field','Numeric Field','Numeric Field',\r\n                    'String Field','String Field','String Field',\r\n                    'Text Field','Text Field','Text Field',\r\n                    'Date Field','Date Field','Date Field',\r\n                    'Boolean Field','Boolean Field','Boolean Field'\r\n                ].map((field, index) => {\r\n                    return (<Field key={index} field={field} index={index} func={fieldsChangeHandle}/>)\r\n                })}\r\n            </Form>\r\n            <Button variant=\"light\" type=\"submit\" className=\"my-3 px-3 float-right w-25\">\r\n                Create\r\n            </Button>\r\n            </Form>\r\n        </Card>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/profile/ProfileCard.jsx",["150","151","152","153"],"import React, {useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Card, Row, Col, Image} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n//import {AuthContext} from '../core/context';\r\n\r\nimport TableRowCollection from './TableRowCollection';\r\n\r\nexport default function ProfileCard(props) {\r\n    const [userData, setUserData] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        created: \"\"})\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/profile', { \"username\": props.username})\r\n        .then((res)=>{\r\n            setUserData(res.data.userdata)\r\n        })\r\n        .catch((err)=>{console.log(err)})\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Header as=\"h5\">Profile:</Card.Header>\r\n                <Card.Body>\r\n                    <Row><Col><Row>\r\n                        <Col><span>{userData.username}</span></Col>\r\n                    </Row><Row>\r\n                        <Col><span>{userData.email}</span></Col>\r\n                    </Row></Col><Col><Row>\r\n                    </Row><Row>\r\n                        <Col><span>JOINED</span></Col>\r\n                        <Col><span>{new Date(userData.created).toLocaleDateString()}</span></Col>\r\n                    </Row></Col><Col><Row>\r\n                        <Col><span>DATA ?:</span></Col>\r\n                        <Col><span>IMG</span></Col>\r\n                    </Row><Row>\r\n                        <Col><span>DATA ?</span></Col>\r\n                        <Col><span>##############</span></Col>\r\n                    </Row></Col></Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/collection/Field.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/drops/DropImageBox.jsx",["154","155","156","157"],"import React from 'react';\r\nimport Dropzone, {useDropzone} from 'react-dropzone'\r\n\r\nexport default function DropImageBox(props) {\r\n    const {getRootProps, getInputProps, acceptedFiles, fileRejections} = useDropzone()\r\n    return (\r\n        <Dropzone\r\n            onDrop={props.onDrop}\r\n            onDragEnter={(event)=>{event.target.classList.toggle ('dropbox-active')}}\r\n            onDragLeave={(event)=>{event.target.classList.toggle ('dropbox-active')}}\r\n            accept=\"image/jpg, image/jpeg, image/png\"\r\n            maxFiles={1}\r\n            maxSize={500000}\r\n            >\r\n            {({getRootProps, getInputProps}) => (\r\n                <section className=\"text-center\">\r\n                    <div {...getRootProps()}\r\n                        className={props.prev ?\r\n                            \"rounded  dropbox dropbox-success mx-auto\":\r\n                            \"rounded  dropbox mx-auto\"}\r\n                        style={{\r\n                            \"background-position\": \"center\",\r\n                            \"background-size\": \"contain\",\r\n                            \"background-image\": `url(${props.prev})`,\r\n                            \"background-origin\": \"content-box\",\r\n                            \"background-repeat\": \"no-repeat\"\r\n                        }}\r\n                        >\r\n                        <input {...getInputProps()}/>\r\n                        {props.prev ? '' : <p> Click here  or drop image</p>}\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </Dropzone>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/items/CustomFields.jsx",["158","159","160","161","162","163","164","165","166","167","168"],"import React, {useEffect} from 'react';\r\nimport {Form, Col, Row,Container} from 'react-bootstrap';\r\n\r\nexport default function CustomFields(props) {\r\n    return (\r\n        <Container className=\"my-2\">\r\n\r\n            {props.scheme.slice(0,3).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index ? index : \"0\"}\r\n                            className=\"bg-dark text-light\"\r\n                            type=\"number\"\r\n                            />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(3,6).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 3}\r\n                            className=\"bg-dark text-light\" />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(6,9).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            rows={5}\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 6}\r\n                            className=\"bg-dark text-light unres\"\r\n                            as=\"textarea\" />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(9,12).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            placeholder=\"asdasd\"\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 9}\r\n                            className=\"bg-dark text-light text-center\"\r\n                            type=\"date\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(12,15).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Form.Check\r\n                        bsPrefix=\"text-center\"\r\n                        id={index + 12}\r\n                        onChange={props.onChangeFunc}\r\n                        label={field}/>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n        </Container>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentBox.jsx",["169"],"import React, {useState} from 'react';\r\nimport {Row, Col, Spinner} from 'react-bootstrap';\r\n\r\nimport Comment from './Comment';\r\nimport CommentForm from './CommentForm';\r\n\r\nexport default function CommentBox() {\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    return (\r\n        <Row className=\"mt-4 mx-auto\">\r\n            <Col lg={12} >\r\n                { loading ?\r\n                    <div className=\"w-100 text-center my-5\">\r\n                        <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                    </div>\r\n                :   <div>\r\n                        <Comment />\r\n                        <Comment />\r\n                        <Comment />\r\n\r\n                        <CommentForm />\r\n                    </div>\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n",{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":3,"column":30,"nodeType":"176","messageId":"177","endLine":3,"endColumn":33},{"ruleId":"174","severity":1,"message":"178","line":3,"column":35,"nodeType":"176","messageId":"177","endLine":3,"endColumn":38},{"ruleId":"174","severity":1,"message":"179","line":13,"column":12,"nodeType":"176","messageId":"177","endLine":13,"endColumn":18},{"ruleId":"180","severity":1,"message":"181","line":24,"column":8,"nodeType":"182","endLine":24,"endColumn":10,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":23,"column":17,"nodeType":"186","endLine":23,"endColumn":76},{"ruleId":"174","severity":1,"message":"187","line":2,"column":9,"nodeType":"176","messageId":"177","endLine":2,"endColumn":20},{"ruleId":"174","severity":1,"message":"188","line":3,"column":9,"nodeType":"176","messageId":"177","endLine":3,"endColumn":17},{"ruleId":"174","severity":1,"message":"189","line":3,"column":43,"nodeType":"176","messageId":"177","endLine":3,"endColumn":52},{"ruleId":"174","severity":1,"message":"190","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":13},{"ruleId":"174","severity":1,"message":"191","line":12,"column":19,"nodeType":"176","messageId":"177","endLine":12,"endColumn":27},{"ruleId":"180","severity":1,"message":"192","line":18,"column":7,"nodeType":"182","endLine":18,"endColumn":9,"suggestions":"193"},{"ruleId":"174","severity":1,"message":"194","line":1,"column":16,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"178","line":2,"column":30,"nodeType":"176","messageId":"177","endLine":2,"endColumn":33},{"ruleId":"174","severity":1,"message":"195","line":2,"column":15,"nodeType":"176","messageId":"177","endLine":2,"endColumn":21},{"ruleId":"174","severity":1,"message":"196","line":2,"column":47,"nodeType":"176","messageId":"177","endLine":2,"endColumn":54},{"ruleId":"197","severity":1,"message":"198","line":8,"column":17,"nodeType":"186","endLine":8,"endColumn":29},{"ruleId":"197","severity":1,"message":"198","line":10,"column":17,"nodeType":"186","endLine":10,"endColumn":29},{"ruleId":"174","severity":1,"message":"199","line":13,"column":12,"nodeType":"176","messageId":"177","endLine":13,"endColumn":18},{"ruleId":"180","severity":1,"message":"200","line":96,"column":8,"nodeType":"182","endLine":96,"endColumn":10,"suggestions":"201"},{"ruleId":"174","severity":1,"message":"194","line":1,"column":16,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"202","line":8,"column":9,"nodeType":"176","messageId":"177","endLine":8,"endColumn":20},{"ruleId":"174","severity":1,"message":"203","line":13,"column":12,"nodeType":"176","messageId":"177","endLine":13,"endColumn":19},{"ruleId":"174","severity":1,"message":"204","line":13,"column":21,"nodeType":"176","messageId":"177","endLine":13,"endColumn":31},{"ruleId":"174","severity":1,"message":"205","line":2,"column":9,"nodeType":"176","messageId":"177","endLine":2,"endColumn":18},{"ruleId":"174","severity":1,"message":"206","line":3,"column":25,"nodeType":"176","messageId":"177","endLine":3,"endColumn":30},{"ruleId":"174","severity":1,"message":"207","line":7,"column":8,"nodeType":"176","messageId":"177","endLine":7,"endColumn":26},{"ruleId":"180","severity":1,"message":"208","line":21,"column":8,"nodeType":"182","endLine":21,"endColumn":10,"suggestions":"209"},{"ruleId":"174","severity":1,"message":"210","line":5,"column":12,"nodeType":"176","messageId":"177","endLine":5,"endColumn":24},{"ruleId":"174","severity":1,"message":"211","line":5,"column":26,"nodeType":"176","messageId":"177","endLine":5,"endColumn":39},{"ruleId":"174","severity":1,"message":"212","line":5,"column":41,"nodeType":"176","messageId":"177","endLine":5,"endColumn":54},{"ruleId":"174","severity":1,"message":"213","line":5,"column":56,"nodeType":"176","messageId":"177","endLine":5,"endColumn":70},{"ruleId":"174","severity":1,"message":"214","line":1,"column":16,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"216","line":8,"column":55,"nodeType":"217","messageId":"218","endLine":8,"endColumn":57},{"ruleId":"219","severity":1,"message":"220","line":8,"column":69,"nodeType":"221","messageId":"222","endLine":8,"endColumn":71},{"ruleId":"215","severity":1,"message":"216","line":23,"column":55,"nodeType":"217","messageId":"218","endLine":23,"endColumn":57},{"ruleId":"219","severity":1,"message":"220","line":23,"column":69,"nodeType":"221","messageId":"222","endLine":23,"endColumn":71},{"ruleId":"215","severity":1,"message":"216","line":36,"column":55,"nodeType":"217","messageId":"218","endLine":36,"endColumn":57},{"ruleId":"219","severity":1,"message":"220","line":36,"column":69,"nodeType":"221","messageId":"222","endLine":36,"endColumn":71},{"ruleId":"215","severity":1,"message":"216","line":51,"column":56,"nodeType":"217","messageId":"218","endLine":51,"endColumn":58},{"ruleId":"219","severity":1,"message":"220","line":51,"column":70,"nodeType":"221","messageId":"222","endLine":51,"endColumn":72},{"ruleId":"215","severity":1,"message":"216","line":66,"column":57,"nodeType":"217","messageId":"218","endLine":66,"endColumn":59},{"ruleId":"219","severity":1,"message":"220","line":66,"column":71,"nodeType":"221","messageId":"222","endLine":66,"endColumn":73},{"ruleId":"174","severity":1,"message":"204","line":8,"column":21,"nodeType":"176","messageId":"177","endLine":8,"endColumn":31},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'isAuth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAdmin', 'profileUserName', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["225"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardColumns' is defined but never used.","'Carousel' is defined but never used.","'Accordion' is defined but never used.","'axios' is defined but never used.","'setItems' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'items.length'. Either include it or remove the dependency array.",["226"],"'useContext' is defined but never used.","'Button' is defined but never used.","'Spinner' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'collection_id', 'scheme.length', and 'whiteList'. Either include them or remove the dependency array.",["227"],"'AuthContext' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'useParams' is defined but never used.","'Image' is defined but never used.","'TableRowCollection' is defined but never used.","React Hook useEffect has a missing dependency: 'props.username'. Either include it or remove the dependency array.",["228"],"'getRootProps' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'acceptedFiles' is assigned a value but never used.","'fileRejections' is assigned a value but never used.","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [isAdmin, profileUserName, username]",{"range":"237","text":"238"},"Update the dependencies array to be: [items.length]",{"range":"239","text":"240"},"Update the dependencies array to be: [collection_id, scheme.length, whiteList]",{"range":"241","text":"242"},"Update the dependencies array to be: [props.username]",{"range":"243","text":"244"},[876,878],"[isAdmin, profileUserName, username]",[596,598],"[items.length]",[3563,3565],"[collection_id, scheme.length, whiteList]",[670,672],"[props.username]"]