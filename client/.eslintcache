[{"/mnt/h/XDev/Home/project-collections/client/src/index.js":"1","/mnt/h/XDev/Home/project-collections/client/src/reportWebVitals.js":"2","/mnt/h/XDev/Home/project-collections/client/src/App.js":"3","/mnt/h/XDev/Home/project-collections/client/src/auth/Login.jsx":"4","/mnt/h/XDev/Home/project-collections/client/src/auth/Signup.jsx":"5","/mnt/h/XDev/Home/project-collections/client/src/admin/Admin.jsx":"6","/mnt/h/XDev/Home/project-collections/client/src/admin/TableRow.jsx":"7","/mnt/h/XDev/Home/project-collections/client/src/profile/Profile.jsx":"8","/mnt/h/XDev/Home/project-collections/client/src/profile/TableRowCollection.jsx":"9","/mnt/h/XDev/Home/project-collections/client/src/main/Main.jsx":"10","/mnt/h/XDev/Home/project-collections/client/src/core/context.jsx":"11","/mnt/h/XDev/Home/project-collections/client/src/collection/Collection.jsx":"12","/mnt/h/XDev/Home/project-collections/client/src/items/ItemList.jsx":"13","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentForm.jsx":"14","/mnt/h/XDev/Home/project-collections/client/src/comments/Comment.jsx":"15","/mnt/h/XDev/Home/project-collections/client/src/items/ItemPrev.jsx":"16","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionPrev.jsx":"17","/mnt/h/XDev/Home/project-collections/client/src/items/Item.jsx":"18","/mnt/h/XDev/Home/project-collections/client/src/main/Footer.jsx":"19","/mnt/h/XDev/Home/project-collections/client/src/main/Header.jsx":"20","/mnt/h/XDev/Home/project-collections/client/src/items/ItemForm.jsx":"21","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionForm.jsx":"22","/mnt/h/XDev/Home/project-collections/client/src/profile/ProfileCard.jsx":"23","/mnt/h/XDev/Home/project-collections/client/src/collection/Field.jsx":"24","/mnt/h/XDev/Home/project-collections/client/src/drops/DropImageBox.jsx":"25","/mnt/h/XDev/Home/project-collections/client/src/items/CustomFields.jsx":"26","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentBox.jsx":"27","/mnt/h/XDev/Home/project-collections/client/src/items/Likes.jsx":"28"},{"size":287,"mtime":1609254632790,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1609251387818,"results":"31","hashOfConfig":"30"},{"size":2099,"mtime":1610465110579,"results":"32","hashOfConfig":"30"},{"size":2753,"mtime":1609592268716,"results":"33","hashOfConfig":"30"},{"size":2649,"mtime":1609590547651,"results":"34","hashOfConfig":"30"},{"size":3942,"mtime":1609685475150,"results":"35","hashOfConfig":"30"},{"size":794,"mtime":1609599149741,"results":"36","hashOfConfig":"30"},{"size":2787,"mtime":1610443541264,"results":"37","hashOfConfig":"30"},{"size":1808,"mtime":1610451675459,"results":"38","hashOfConfig":"30"},{"size":2840,"mtime":1610463091458,"results":"39","hashOfConfig":"30"},{"size":256,"mtime":1609593926240,"results":"40","hashOfConfig":"30"},{"size":3095,"mtime":1610451074280,"results":"41","hashOfConfig":"30"},{"size":832,"mtime":1610465356068,"results":"42","hashOfConfig":"30"},{"size":845,"mtime":1609360451100,"results":"43","hashOfConfig":"30"},{"size":627,"mtime":1610277071873,"results":"44","hashOfConfig":"30"},{"size":1505,"mtime":1610465190317,"results":"45","hashOfConfig":"30"},{"size":1611,"mtime":1610464111671,"results":"46","hashOfConfig":"30"},{"size":5217,"mtime":1610451057191,"results":"47","hashOfConfig":"30"},{"size":424,"mtime":1610281396389,"results":"48","hashOfConfig":"30"},{"size":2421,"mtime":1610451775011,"results":"49","hashOfConfig":"30"},{"size":5843,"mtime":1610449113072,"results":"50","hashOfConfig":"30"},{"size":6076,"mtime":1610355867818,"results":"51","hashOfConfig":"30"},{"size":2066,"mtime":1610379474101,"results":"52","hashOfConfig":"30"},{"size":584,"mtime":1609865235110,"results":"53","hashOfConfig":"30"},{"size":1559,"mtime":1610027352706,"results":"54","hashOfConfig":"30"},{"size":3284,"mtime":1610199687124,"results":"55","hashOfConfig":"30"},{"size":643,"mtime":1610362424284,"results":"56","hashOfConfig":"30"},{"size":1250,"mtime":1610369370827,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"blk22b",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},"/mnt/h/XDev/Home/project-collections/client/src/index.js",[],["127","128"],"/mnt/h/XDev/Home/project-collections/client/src/reportWebVitals.js",[],"/mnt/h/XDev/Home/project-collections/client/src/App.js",[],"/mnt/h/XDev/Home/project-collections/client/src/auth/Login.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/auth/Signup.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/admin/Admin.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/admin/TableRow.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/profile/Profile.jsx",["129","130","131","132"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Table, Button, Card, Row, Col} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport {AuthContext} from '../core/context';\r\n\r\nimport ProfileCard from './ProfileCard';\r\nimport TableRowCollection from './TableRowCollection';\r\n\r\nexport default function Profile(props) {\r\n    const { profileUserName } = useParams()\r\n    const {isAuth, isAdmin, username} = useContext(AuthContext);\r\n    const [profile, setProfile] = useState({\r\n        userdata: {\r\n            username: \"\",\r\n            email: \"\",\r\n            created: \"\",\r\n            collections: []\r\n        },\r\n        collections: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (isAdmin || profileUserName === username) {\r\n            axios.post('/api/profile', { \"username\": profileUserName})\r\n            .then((res)=>{\r\n                setProfile({userdata: res.data.userdata, collections: res.data.collections})\r\n            })\r\n            .catch((err)=>{console.log(err)})\r\n        } else {\r\n            window.location.replace('/')\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <ProfileCard userData={profile.userdata}/>\r\n            <Card className=\"bg-dark text-light my-1\">\r\n                <Card.Header as=\"h5\">Collections:</Card.Header>\r\n                <Card.Body>\r\n                    <Table size=\"sm\" bordered hover responsive variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"7\">\r\n                                    <Button\r\n                                        className=\"my-2\"\r\n                                        variant=\"outline-success\"\r\n                                        as=\"a\"\r\n                                        href={`/collection/create/${profileUserName}`}\r\n                                        >Create new collection</Button>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Image</th>\r\n                                <th>Name</th>\r\n                                <th>Theme</th>\r\n                                <th>Items</th>\r\n                                <th>Created</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { profile.collections.map( (coll, index) => {\r\n                                return <TableRowCollection  data={coll} key={index}/>\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/profile/TableRowCollection.jsx",["133"],"import React, {useState} from 'react';\r\nimport {Button, ButtonGroup } from 'react-bootstrap';\r\nimport {TrashFill, PenFill, PlusSquare} from 'react-bootstrap-icons';\r\n\r\nexport default function TableRowCollection(props) {\r\n    const [hover, setHover] = useState(false)\r\n    const editHandle = () =>{\r\n        // TODO: edit\r\n    }\r\n    const deleteHandle = () =>{\r\n        // TODO: delete\r\n    }\r\n\r\n    return (\r\n        <tr onMouseOver={()=>{setHover(true)}} onMouseOut={()=>{setHover(false)}} >\r\n            <td className=\"ctd align-middle p-0\">\r\n                <ButtonGroup className={` ${ hover ? '': 'invisible'}`}>\r\n                  <Button size=\"sm\" variant=\"outline-info\" onClick={editHandle}>\r\n                      <PenFill color=\"white\" className=\"\"/>\r\n                  </Button>\r\n                  <Button size=\"sm\" variant=\"outline-success\" as=\"a\" href={ `/collection/create_item/${props.data._id}` }>\r\n                      <PlusSquare color=\"white\" />\r\n                  </Button>\r\n                  <Button size=\"sm\" variant=\"outline-danger\" onClick={deleteHandle}>\r\n                      <TrashFill color=\"white\" />\r\n                  </Button>\r\n                </ButtonGroup>\r\n            </td>\r\n            <td className=\"ctd\">\r\n                <img src={'/static' + props.data.image_url} height=\"60px\"/>\r\n            </td>\r\n            <td className=\"ctd\" as=\"a\" href={`/collection/${props.data._id}`} >\r\n                <a className=\"text-decoration-none text-light\" href={`/collection/${props.data._id}`} >{props.data.name}</a>\r\n            </td>\r\n            <td className=\"ctd\">{props.data.theme}</td>\r\n            <td className=\"ctd\">{props.data.items.length}</td>\r\n            <td className=\"ctd\">{new Date(props.data.created).toLocaleDateString()}</td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/main/Main.jsx",["134"],"/mnt/h/XDev/Home/project-collections/client/src/core/context.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/collection/Collection.jsx",["135"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Card, Button, Col, Row, Badge} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport Item from '../items/Item';\r\nimport {AuthContext} from '../core/context';\r\n\r\nexport default function Collection() {\r\n    const {collId} = useParams();\r\n    const [loading, setLoading] = useState(true)\r\n    const {isAuth, isAdmin} = useContext(AuthContext);\r\n    const [collection, setCollection] = useState()\r\n\r\n    useEffect(()=>{\r\n        if (!collection) {\r\n            let params = {collection_id: collId}\r\n            axios.get('/api/collection', {params})\r\n            .then((res)=>{\r\n                setCollection(res.data);\r\n                setLoading(false)\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err);\r\n            })\r\n        }\r\n    },[])\r\n\r\n    if (loading){return ''} else {\r\n    return (\r\n        <Card className=\"bg-dark text-light m-1 p-2\">\r\n            {isAuth || isAdmin ?     /////////////////////////////////////// collection.user_id\r\n                <Card.Title>\r\n                    <span> {collection.name} </span>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"outline-light\"\r\n                        className=\"float-right mx-1 px-2\" o\r\n                        nClick={()=>{}}>\r\n                        Edit Collection\r\n                    </Button>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"outline-light\"\r\n                        className=\"float-right mx-1 px-2\"\r\n                        as=\"a\"\r\n                        href={`/collection/create_item/${collection._id}`}>\r\n                        Add Item\r\n                    </Button>\r\n                </Card.Title>\r\n            :\r\n                <Card.Title> {collection.name} </Card.Title>\r\n            }\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col lg={3}>\r\n                        <Card.Img src={`/static/${collection.image_url}`}/>\r\n                        <strong className=\"\"># {collection.user_id.username.toUpperCase()} </strong>\r\n                        {collection.user_id.status ? <Badge variant=\"danger\">Banned</Badge>: ''}\r\n                        <Badge variant=\"warning\">admin</Badge>\r\n                        <br/>\r\n                        <small className=\"text-muted\"> {new Date(collection.created).toLocaleDateString()} </small>\r\n                        <br/>\r\n                        <small><ReactMarkdown children={collection.description}/></small>\r\n                        <div className=\"border-bottom\"></div>\r\n                    </Col>\r\n                    <Col lg={9} className=\"\">\r\n                        { collection.items.map((data, index) => {\r\n                            return <Row><Item key={index} data={data}/></Row>\r\n                        })}\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )}\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/items/ItemList.jsx",["136","137"],"/mnt/h/XDev/Home/project-collections/client/src/comments/CommentForm.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/comments/Comment.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/items/ItemPrev.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionPrev.jsx",["138"],"/mnt/h/XDev/Home/project-collections/client/src/items/Item.jsx",["139","140","141","142","143","144"],"import React from 'react';\r\nimport {Card, Col, Row, Button, Badge, Table, Spinner, Tab, Tabs} from 'react-bootstrap';\r\nimport {HandThumbsUp, TrashFill, PenFill } from 'react-bootstrap-icons';\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport CommentBox from '../comments/CommentBox';\r\nimport Likes from './Likes';\r\n\r\nexport default function Item(props) {\r\n    return (\r\n        <Card border=\"light\" bg=\"dark\" text=\"light\" className=\"my-2 mx-auto w-100\">\r\n            <Card.Title className='p-1'>\r\n                <span className=\"mx-2\">{props.data.name}</span>\r\n                <Button size=\"sm\" variant=\"outline-danger\" className=\"float-right mx-1 px-2\">\r\n                     <TrashFill color=\"red\" />\r\n                </Button>\r\n                <Button size=\"sm\" variant=\"outline-light\" className=\"float-right mx-1 px-2\">\r\n                     <PenFill color=\"white\" />\r\n                </Button>\r\n            </Card.Title>\r\n            <Card.Body>\r\n                <Tabs defaultActiveKey=\"item\" className=\"mx-auto\">\r\n                    <Tab eventKey=\"item\" title=\"Item\" tabClassName=\"bg-dark text-light\">\r\n                        <Row className=\"mt-4\">\r\n                            <Col md={5}>\r\n                                <Card.Img\r\n                                    variant=\"top\"\r\n                                    src={`/static/${props.data.image_url}` || '/static/noimage.jpg'}\r\n                                    fluid\r\n                                    rounded\r\n                                    className=\"border border-secondary\"\r\n                                    />\r\n                                {props.data.tags_id.map((tag, index) => {\r\n                                    return (<Badge className=\"mx-1\" variant=\"light\" key={index}> {tag.name} </Badge>)\r\n                                })}\r\n                            </Col>\r\n                            <Col md={7}>\r\n                                <Card.Body>\r\n                                    <Table size=\"sm\" borderless striped variant=\"dark\">\r\n                                        <tbody>\r\n\r\n                                            {props.data.fieldset_id.fields.slice(0, 6).map((f, i)=>{\r\n                                                if (f) {return(\r\n                                                    <tr><td className=\"font-weight-bold\">{f.name}</td>\r\n                                                    <td>{f.value}</td></tr>\r\n                                            )}})}\r\n\r\n                                            {props.data.fieldset_id.fields.slice(9, 12).map((f, i)=>{\r\n                                                if (f) {return(\r\n                                                    <tr><td className=\"font-weight-bold\">{f.name}</td>\r\n                                                    <td>{new Date(f.value).toLocaleDateString()}</td></tr>\r\n                                            )}})}\r\n\r\n                                            {props.data.fieldset_id.fields.slice(12, 15).map((f, i)=>{\r\n                                                if (f) {return(\r\n                                                    <tr><td className=\"font-weight-bold\">{f.name}</td>\r\n                                                    <td>{f.value ? 'Yes': 'No'}</td></tr>\r\n                                            )}})}\r\n\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Card.Body>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                            {props.data.fieldset_id.fields.slice(6, 9).map((f, i)=>{\r\n                                if (f) {return(\r\n                                    <Row>\r\n                                    <Col md={12} className=\"text-center\">{f.name}</Col>\r\n                                    <Col md={12} className=\"\">\r\n                                        <div className=\"bg-light text-dark rounded p-1 my-1\">\r\n                                            <ReactMarkdown children={f.value}/>\r\n                                        </div>\r\n                                    </Col>\r\n                                    </Row>\r\n                                )}\r\n                            })}\r\n\r\n                        <Row className=\"mb-3\">\r\n                            <Col md={12} className=\"text-center\">\r\n                                <Likes startCount={props.data.like_list.length} itemId={props.data._id}/>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={12} >\r\n                            <small className=\"text-muted float-right\"> {new Date(props.data.created).toLocaleDateString()}</small>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Tab>\r\n                    <Tab eventKey=\"comments\" title=\"Comments\"  tabClassName=\"bg-dark text-light\">\r\n                        <Card.Body>\r\n                            <CommentBox itemId={props.data._id}/>\r\n                        </Card.Body>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/main/Footer.jsx",["145","146"],"import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"container text-center mt-2 py-2 bg-dark text-light\">\r\n            <p>\r\n                © 2020-2021 Bla-Bla-Company, Inc.  ·\r\n                <a href=\"#\"> BadLink#1 </a>\r\n                  ·\r\n                <a href=\"#\"> BadLink#2 </a>\r\n                <span></span>\r\n            </p>\r\n        </footer>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/main/Header.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/items/ItemForm.jsx",["147","148"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {Card, Form, Button, Col} from 'react-bootstrap';\r\nimport {useParams} from \"react-router-dom\";\r\nimport Tags from \"@yaireo/tagify/dist/react.tagify\"\r\nimport axios from 'axios';\r\n\r\nimport {AuthContext} from '../core/context';\r\nimport DropImageBox from '../drops/DropImageBox';\r\nimport CustomFields from './CustomFields';\r\n\r\nexport default function ItemForm() {\r\n    const {collection_id} = useParams();\r\n    const {userId} = useContext(AuthContext);\r\n    const [scheme, setScheme] = useState([])\r\n    const [inputTags, setInputTags] = useState([])\r\n    const [whiteList, setWhiteList] = useState()\r\n    const [formData, setFormData] = useState({name: \"\"})\r\n    const [fieldsData, setFieldsData] = useState(new Array(15).fill(false))\r\n    const [prevUrl, setPrevUrl] = useState()\r\n    const [fileCont, setFileCont] = useState()\r\n\r\n    const onDropHandle = (afiles, rfiles, event) => {\r\n        if (afiles.length !== 0) {\r\n            let reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                let url = reader.result\r\n                setPrevUrl(url);\r\n            }\r\n            reader.readAsDataURL(afiles[0])\r\n            setFileCont(afiles)\r\n        }\r\n    }\r\n\r\n    const tagsChangeHandle = (event) => {\r\n        event.persist();\r\n        let tags = []\r\n        let data = event.target.value ? JSON.parse(event.target.value): []\r\n        for (let i in data) {\r\n            tags.push(data[i].value);\r\n        }\r\n        setInputTags(tags);\r\n    }\r\n\r\n    const formChangeHandle = (event) => {\r\n        setFormData({...formData, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const fieldsChangeHandle = (event) => {\r\n        let tempData = fieldsData;\r\n        if (event.target.type === \"checkbox\") {\r\n            tempData[parseInt(event.target.id)] = event.target.checked;\r\n        } else if (event.target.type === \"number\") {\r\n            tempData[parseInt(event.target.id)] = parseInt(event.target.value);\r\n        } else if (event.target.type === \"date\") {\r\n            tempData[parseInt(event.target.id)] = new Date(event.target.value);\r\n        } else {\r\n            tempData[parseInt(event.target.id)] = event.target.value;\r\n        }\r\n        setFieldsData(tempData)\r\n    }\r\n\r\n    const formSubmitHandle = (event) => {\r\n        event.preventDefault();\r\n        axios.post('/api/collection/add', {\r\n            name: formData.name,\r\n            fields: fieldsData,\r\n            coll_id: collection_id,\r\n            tags: inputTags,\r\n            scheme: scheme\r\n        })\r\n        .then((res) => {\r\n            const item_id = res.data.item_id;\r\n            const data = new FormData();\r\n            data.append(\"item_id\", item_id);\r\n            data.append('image', fileCont[0]);\r\n            const config = {headers: {'Content-Type': 'multipart/form-data'}};\r\n            axios.post('/api/collection/image', data, config)\r\n            .then((res) => {\r\n                window.location.replace(`/collection/${collection_id}`)\r\n            })\r\n            .catch((err) => { console.log(err) });\r\n        })\r\n        .catch((err) => { console.log(err) })\r\n    }\r\n\r\n    useEffect( () => {\r\n        if (scheme.length === 0) {\r\n            axios.post('/api/collection/scheme', {coll_id: collection_id})\r\n            .then((res)=>{\r\n                setScheme(res.data)\r\n            })\r\n            .catch((err)=>{ })\r\n        }\r\n        if (!whiteList){\r\n            axios.get('/api/tag')\r\n            .then((res)=>{ let temp = []; res.data.forEach( (tag) => { temp.push(tag.name) }); setWhiteList(temp)})\r\n            .catch((err)=>{ console.log(err) })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"my-1 p-2 bg-dark text-light\">\r\n                <Form className=\"bg-dark text-light\" onSubmit={formSubmitHandle}>\r\n                    <Card.Title className=\"text-center my-4\"> {'Create new item'}</Card.Title>\r\n                    <Form.Row className=\"justify-content-center\">\r\n                        <Col lg={4}>\r\n                            <Form.Group>\r\n                                <DropImageBox onDrop={onDropHandle} successFlag={prevUrl} prev={prevUrl}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"justify-content-center\">\r\n                        <Col lg={6} className=\"align-middle\">\r\n                            <Form.Group >\r\n                                <Form.Label > Item Name: </Form.Label>\r\n                                <Form.Control\r\n                                    required={true}\r\n                                    onChange={formChangeHandle}\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    className=\"bg-dark text-light\"/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Tags\r\n                                    value=''\r\n                                    whitelist={whiteList}\r\n                                    onChange={tagsChangeHandle}\r\n                                    placeholder=\"Tags\"\r\n                                    className=\"form-control form-control-sm bg-dark text-light c-tag border-light\"/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"justify-content-center\">\r\n                        <CustomFields scheme={scheme} onChangeFunc={fieldsChangeHandle}/>\r\n                    </Form.Row>\r\n                    <Button variant=\"light\" type=\"submit\" className=\"float-right w-25\"> Create </Button>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionForm.jsx",["149","150","151","152"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport FormData from 'form-data'\r\nimport {Card, Form, Button, Col} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport Field from './Field'\r\nimport {AuthContext} from '../core/context';\r\nimport DropImageBox from '../drops/DropImageBox';\r\n\r\nexport default function CollectionForm() {\r\n    const {profile_name} = useParams(); // Перед этим возникает 404 // замменитть на пропс + переход после submit\r\n    const [loading, setLoading] = useState(false)\r\n    const [formData, setFormData] = useState({name: \"\", theme: \"\", discription: \"\"})\r\n    const [themes, setThemes] = useState([])\r\n    const [fields, setFields] = useState(new Array(15).fill(''))\r\n    const [fileCont, setFileCont] = useState()\r\n    const [prevUrl, setPrevUrl] = useState()\r\n\r\n\r\n    const onDropHandle = (afiles, rfiles, event) => {\r\n        if (afiles.length !== 0) {\r\n            let reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                let url = reader.result\r\n                setPrevUrl(url);\r\n            }\r\n            reader.readAsDataURL(afiles[0])\r\n            setFileCont(afiles)\r\n        }\r\n    }\r\n\r\n    const formChangeHandle = (event) => {\r\n        setFormData({...formData, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const fieldsChangeHandle = (event) => {\r\n        let tempFields = fields;\r\n        tempFields[parseInt(event.target.id)] = event.target.value;\r\n        setFields(tempFields)\r\n    }\r\n\r\n    const formSubmitHandle = (event) => {\r\n        event.preventDefault();\r\n        axios.post('/api/collection/create', {...formData, fields, profile_name})\r\n        .then((res) => {\r\n            const coll_id = res.data.coll_id;\r\n            const data = new FormData();\r\n            data.append(\"coll_id\", coll_id);\r\n            data.append('image', fileCont[0]);\r\n            const config = {headers: {'Content-Type': 'multipart/form-data'}};\r\n            axios.post('/api/collection/image', data, config)\r\n            .then((res) => {\r\n                window.location.replace(`/collection/${coll_id}`)\r\n            })\r\n            .catch((err) => { console.log(err) });\r\n        })\r\n        .catch((err) => { console.log(err) })\r\n    }\r\n\r\n    useEffect( () => {\r\n        if (themes.length === 0) {\r\n            axios.get('/api/themes')\r\n            .then((res) => { setThemes(res.data) })\r\n            .catch((err) => { console.log(err); })\r\n        }\r\n    }, [themes])\r\n\r\n    return (\r\n        <Card className=\"my-1 p-3 bg-dark text-light\">\r\n            <Form className=\"bg-dark text-light\" onSubmit={formSubmitHandle}>\r\n                <Form.Row>\r\n                    <Col lg={3}>\r\n                        <Form.Group className=\"bg-dark text-light\">\r\n                            <DropImageBox onDrop={onDropHandle} successFlag={prevUrl} prev={prevUrl}/>\r\n                            <Form.Text className=\"text-muted text-truncate mx-2\">\r\n                                {prevUrl ? '' : 'Please choice correct file ...'}\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col lg={1}></Col>\r\n                    <Col lg={8}>\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                                required={true}\r\n                                onChange={formChangeHandle}\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                name=\"name\"\r\n                                className=\"bg-dark text-light\"/>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"form-inline\">\r\n                            <Form.Control\r\n                                required={true}\r\n                                onChange={formChangeHandle}\r\n                                as=\"select\"\r\n                                custom\r\n                                name=\"theme\"\r\n                                className=\"bg-dark text-light w-25\">\r\n                                    <option value=\"\" className=\"text-muted\">Theme ...</option>\r\n                                    {themes.map( (theme) => {\r\n                                        return <option value={theme}>{theme}</option>\r\n                                    } )}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                                onChange={formChangeHandle}\r\n                                as=\"textarea\"\r\n                                placeholder=\"Discription\"\r\n                                rows={3}\r\n                                style={{\"resize\":\"none\"}}\r\n                                name=\"discription\"\r\n                                className=\"bg-dark text-light\"/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Form.Row>\r\n\r\n            <Card.Title className=\"my-2\">Custom Fields:</Card.Title>\r\n            <Card.Text className=\"my-1 text-muted\">\r\n                Please enter the names of custom fields or leave the field blank\r\n            </Card.Text>\r\n            <Form inline>\r\n                {[\r\n                    'Numeric Field','Numeric Field','Numeric Field',\r\n                    'String Field','String Field','String Field',\r\n                    'Text Field','Text Field','Text Field',\r\n                    'Date Field','Date Field','Date Field',\r\n                    'Boolean Field','Boolean Field','Boolean Field'\r\n                ].map((field, index) => {\r\n                    return (<Field key={index} field={field} index={index} func={fieldsChangeHandle}/>)\r\n                })}\r\n            </Form>\r\n            <Button variant=\"light\" type=\"submit\" className=\"my-3 px-3 float-right w-25\">\r\n                Create\r\n            </Button>\r\n            </Form>\r\n        </Card>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/profile/ProfileCard.jsx",["153","154","155","156","157","158","159"],"import React, {useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Card, Row, Col, Image, Badge, Table} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport TableRowCollection from './TableRowCollection';\r\n\r\nexport default function ProfileCard(props) {\r\n    return (\r\n        <div>\r\n            <Card className=\"bg-dark text-light my-1\">\r\n                <Card.Header as=\"h5\">\r\n                    <span># {props.userData.username} </span>\r\n                    {props.userData.staff ? <Badge variant=\"warning\">admin</Badge> : ''}\r\n                    <span className=\"float-right\">{new Date(props.userData.created).toLocaleDateString()} </span>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Col lg={6}>\r\n                    <Table size='sm' variant='dark'>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td> Email: </td>\r\n                                <td>{props.userData.email} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td> Joined: </td>\r\n                                <td> {new Date(props.userData.created).toLocaleDateString()} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td> Colections: </td>\r\n                                <td> {props.userData.collections.length} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td> Status: </td>\r\n                                {props.userData.status ?\r\n                                <td><Badge variant=\"danger\">BANNED</Badge></td>\r\n                                :\r\n                                <td><Badge variant=\"success\">ALIVE</Badge></td>\r\n                                }\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    </Col>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/collection/Field.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/drops/DropImageBox.jsx",["160","161","162","163"],"import React from 'react';\r\nimport Dropzone, {useDropzone} from 'react-dropzone'\r\n\r\nexport default function DropImageBox(props) {\r\n    const {getRootProps, getInputProps, acceptedFiles, fileRejections} = useDropzone()\r\n    return (\r\n        <Dropzone\r\n            onDrop={props.onDrop}\r\n            onDragEnter={(event)=>{event.target.classList.toggle ('dropbox-active')}}\r\n            onDragLeave={(event)=>{event.target.classList.toggle ('dropbox-active')}}\r\n            accept=\"image/jpg, image/jpeg, image/png\"\r\n            maxFiles={1}\r\n            maxSize={500000}\r\n            >\r\n            {({getRootProps, getInputProps}) => (\r\n                <section className=\"text-center\">\r\n                    <div {...getRootProps()}\r\n                        className={props.prev ?\r\n                            \"rounded  dropbox dropbox-success mx-auto\":\r\n                            \"rounded  dropbox mx-auto\"}\r\n                        style={{\r\n                            \"background-position\": \"center\",\r\n                            \"background-size\": \"contain\",\r\n                            \"background-image\": `url(${props.prev})`,\r\n                            \"background-origin\": \"content-box\",\r\n                            \"background-repeat\": \"no-repeat\"\r\n                        }}\r\n                        >\r\n                        <input {...getInputProps()}/>\r\n                        {props.prev ? '' : <p> Click here  or drop image</p>}\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </Dropzone>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/items/CustomFields.jsx",["164","165","166","167","168","169","170","171","172","173","174"],"import React, {useEffect} from 'react';\r\nimport {Form, Col, Row,Container} from 'react-bootstrap';\r\n\r\nexport default function CustomFields(props) {\r\n    return (\r\n        <Container className=\"my-2\">\r\n\r\n            {props.scheme.slice(0,3).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index ? index : \"0\"}\r\n                            className=\"bg-dark text-light\"\r\n                            type=\"number\"\r\n                            />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(3,6).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 3}\r\n                            className=\"bg-dark text-light\" />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(6,9).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            rows={5}\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 6}\r\n                            className=\"bg-dark text-light unres\"\r\n                            as=\"textarea\" />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(9,12).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Col lg={6}>\r\n                        <Form.Label > {field} </Form.Label>\r\n                        <Form.Control\r\n                            placeholder=\"asdasd\"\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 9}\r\n                            className=\"bg-dark text-light text-center\"\r\n                            type=\"date\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(12,15).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Form.Check\r\n                        bsPrefix=\"text-center\"\r\n                        id={index + 12}\r\n                        onChange={props.onChangeFunc}\r\n                        label={field}/>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n        </Container>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentBox.jsx",["175","176","177"],"import React, {useState, useEffect} from 'react';\r\nimport {Row, Col, Spinner} from 'react-bootstrap';\r\n\r\nimport Comment from './Comment';\r\nimport CommentForm from './CommentForm';\r\n\r\nexport default function CommentBox(props) {\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        // запрос на коменты раз в 5 сек {props.itemId}\r\n    }, [])\r\n\r\n    return (\r\n        <Row className=\"mt-4 mx-auto\">\r\n            <Col lg={12} >\r\n                <Comment />\r\n                <Comment />\r\n                <Comment />\r\n                <CommentForm />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/items/Likes.jsx",["178","179","180"],"import React, {useState, useContext} from 'react';\r\nimport {Button, Badge, Overlay, Popover, OverlayTrigger} from 'react-bootstrap';\r\nimport {HandThumbsUp} from 'react-bootstrap-icons';\r\nimport axios from 'axios';\r\n\r\nimport {AuthContext} from '../core/context';\r\n\r\nexport default function Likes(props) {\r\n    const {isAuth, userId} = useContext(AuthContext);\r\n    const [likes, setLikes] = useState(props.startCount);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const likeHandle = () => {\r\n        if (isAuth) {\r\n            axios.post('/api/items/like', {user_id: userId, item_id: props.itemId})\r\n            .then((res)=>{setLikes(res.data.likes)})\r\n            .catch((err)=>{ console.log(err) })\r\n        }\r\n    }\r\n\r\n    const popover = (\r\n      <Popover id=\"popover-basic\"><Popover.Content>\r\n          <strong>You must be logged in!</strong>\r\n      </Popover.Content> </Popover>\r\n    )\r\n\r\n    return (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover} show={!isAuth}>\r\n            <Button variant=\"outline-light\" className=\"text-center px-1\" onClick={likeHandle}>\r\n                <HandThumbsUp size={24}/> <Badge variant=\"light\"> {likes} </Badge>\r\n            </Button>\r\n        </OverlayTrigger>\r\n    )\r\n}\r\n",{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":3,"column":30,"nodeType":"187","messageId":"188","endLine":3,"endColumn":33},{"ruleId":"185","severity":1,"message":"189","line":3,"column":35,"nodeType":"187","messageId":"188","endLine":3,"endColumn":38},{"ruleId":"185","severity":1,"message":"190","line":12,"column":12,"nodeType":"187","messageId":"188","endLine":12,"endColumn":18},{"ruleId":"191","severity":1,"message":"192","line":34,"column":8,"nodeType":"193","endLine":34,"endColumn":10,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":30,"column":17,"nodeType":"197","endLine":30,"endColumn":76},{"ruleId":"191","severity":1,"message":"198","line":34,"column":8,"nodeType":"193","endLine":34,"endColumn":10,"suggestions":"199"},{"ruleId":"191","severity":1,"message":"200","line":28,"column":7,"nodeType":"193","endLine":28,"endColumn":9,"suggestions":"201"},{"ruleId":"185","severity":1,"message":"202","line":1,"column":16,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"203","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":16},{"ruleId":"185","severity":1,"message":"204","line":2,"column":15,"nodeType":"187","messageId":"188","endLine":2,"endColumn":21},{"ruleId":"185","severity":1,"message":"205","line":2,"column":47,"nodeType":"187","messageId":"188","endLine":2,"endColumn":54},{"ruleId":"185","severity":1,"message":"206","line":3,"column":9,"nodeType":"187","messageId":"188","endLine":3,"endColumn":21},{"ruleId":"207","severity":1,"message":"208","line":42,"column":98,"nodeType":"209","messageId":"210","endLine":42,"endColumn":100},{"ruleId":"207","severity":1,"message":"208","line":48,"column":99,"nodeType":"209","messageId":"210","endLine":48,"endColumn":101},{"ruleId":"207","severity":1,"message":"208","line":54,"column":100,"nodeType":"209","messageId":"210","endLine":54,"endColumn":102},{"ruleId":"207","severity":1,"message":"208","line":66,"column":82,"nodeType":"209","messageId":"210","endLine":66,"endColumn":84},{"ruleId":"211","severity":1,"message":"212","line":8,"column":17,"nodeType":"197","endLine":8,"endColumn":29},{"ruleId":"211","severity":1,"message":"212","line":10,"column":17,"nodeType":"197","endLine":10,"endColumn":29},{"ruleId":"185","severity":1,"message":"213","line":13,"column":12,"nodeType":"187","messageId":"188","endLine":13,"endColumn":18},{"ruleId":"191","severity":1,"message":"214","line":99,"column":8,"nodeType":"193","endLine":99,"endColumn":10,"suggestions":"215"},{"ruleId":"185","severity":1,"message":"202","line":1,"column":16,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"216","line":8,"column":9,"nodeType":"187","messageId":"188","endLine":8,"endColumn":20},{"ruleId":"185","severity":1,"message":"217","line":13,"column":12,"nodeType":"187","messageId":"188","endLine":13,"endColumn":19},{"ruleId":"185","severity":1,"message":"218","line":13,"column":21,"nodeType":"187","messageId":"188","endLine":13,"endColumn":31},{"ruleId":"185","severity":1,"message":"219","line":1,"column":16,"nodeType":"187","messageId":"188","endLine":1,"endColumn":24},{"ruleId":"185","severity":1,"message":"220","line":1,"column":26,"nodeType":"187","messageId":"188","endLine":1,"endColumn":35},{"ruleId":"185","severity":1,"message":"221","line":2,"column":9,"nodeType":"187","messageId":"188","endLine":2,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":3,"column":15,"nodeType":"187","messageId":"188","endLine":3,"endColumn":18},{"ruleId":"185","severity":1,"message":"222","line":3,"column":25,"nodeType":"187","messageId":"188","endLine":3,"endColumn":30},{"ruleId":"185","severity":1,"message":"223","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":13},{"ruleId":"185","severity":1,"message":"224","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":26},{"ruleId":"185","severity":1,"message":"225","line":5,"column":12,"nodeType":"187","messageId":"188","endLine":5,"endColumn":24},{"ruleId":"185","severity":1,"message":"226","line":5,"column":26,"nodeType":"187","messageId":"188","endLine":5,"endColumn":39},{"ruleId":"185","severity":1,"message":"227","line":5,"column":41,"nodeType":"187","messageId":"188","endLine":5,"endColumn":54},{"ruleId":"185","severity":1,"message":"228","line":5,"column":56,"nodeType":"187","messageId":"188","endLine":5,"endColumn":70},{"ruleId":"185","severity":1,"message":"220","line":1,"column":16,"nodeType":"187","messageId":"188","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"208","line":8,"column":55,"nodeType":"209","messageId":"210","endLine":8,"endColumn":57},{"ruleId":"229","severity":1,"message":"230","line":8,"column":69,"nodeType":"231","messageId":"232","endLine":8,"endColumn":71},{"ruleId":"207","severity":1,"message":"208","line":23,"column":55,"nodeType":"209","messageId":"210","endLine":23,"endColumn":57},{"ruleId":"229","severity":1,"message":"230","line":23,"column":69,"nodeType":"231","messageId":"232","endLine":23,"endColumn":71},{"ruleId":"207","severity":1,"message":"208","line":36,"column":55,"nodeType":"209","messageId":"210","endLine":36,"endColumn":57},{"ruleId":"229","severity":1,"message":"230","line":36,"column":69,"nodeType":"231","messageId":"232","endLine":36,"endColumn":71},{"ruleId":"207","severity":1,"message":"208","line":51,"column":56,"nodeType":"209","messageId":"210","endLine":51,"endColumn":58},{"ruleId":"229","severity":1,"message":"230","line":51,"column":70,"nodeType":"231","messageId":"232","endLine":51,"endColumn":72},{"ruleId":"207","severity":1,"message":"208","line":66,"column":57,"nodeType":"209","messageId":"210","endLine":66,"endColumn":59},{"ruleId":"229","severity":1,"message":"230","line":66,"column":71,"nodeType":"231","messageId":"232","endLine":66,"endColumn":73},{"ruleId":"185","severity":1,"message":"205","line":2,"column":19,"nodeType":"187","messageId":"188","endLine":2,"endColumn":26},{"ruleId":"185","severity":1,"message":"217","line":8,"column":12,"nodeType":"187","messageId":"188","endLine":8,"endColumn":19},{"ruleId":"185","severity":1,"message":"218","line":8,"column":21,"nodeType":"187","messageId":"188","endLine":8,"endColumn":31},{"ruleId":"185","severity":1,"message":"233","line":2,"column":24,"nodeType":"187","messageId":"188","endLine":2,"endColumn":31},{"ruleId":"185","severity":1,"message":"234","line":11,"column":12,"nodeType":"187","messageId":"188","endLine":11,"endColumn":16},{"ruleId":"185","severity":1,"message":"235","line":11,"column":18,"nodeType":"187","messageId":"188","endLine":11,"endColumn":25},"no-native-reassign",["236"],"no-negated-in-lhs",["237"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'isAuth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAdmin', 'profileUserName', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["238"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'largeColls', 'lastItems', and 'tagCloud'. Either include them or remove the dependency array.",["239"],"React Hook useEffect has missing dependencies: 'collId' and 'collection'. Either include them or remove the dependency array.",["240"],"'useContext' is defined but never used.","'ItemPrev' is defined but never used.","'Button' is defined but never used.","'Spinner' is defined but never used.","'HandThumbsUp' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'collection_id', 'scheme.length', and 'whiteList'. Either include them or remove the dependency array.",["241"],"'AuthContext' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'Image' is defined but never used.","'axios' is defined but never used.","'TableRowCollection' is defined but never used.","'getRootProps' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'acceptedFiles' is assigned a value but never used.","'fileRejections' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Overlay' is defined but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [isAdmin, profileUserName, username]",{"range":"250","text":"251"},"Update the dependencies array to be: [largeColls, lastItems, tagCloud]",{"range":"252","text":"253"},"Update the dependencies array to be: [collId, collection]",{"range":"254","text":"255"},"Update the dependencies array to be: [collection_id, scheme.length, whiteList]",{"range":"256","text":"257"},[1137,1139],"[isAdmin, profileUserName, username]",[1148,1150],"[largeColls, lastItems, tagCloud]",[933,935],"[collId, collection]",[3682,3684],"[collection_id, scheme.length, whiteList]"]