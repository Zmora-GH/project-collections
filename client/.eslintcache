[{"/mnt/h/XDev/Home/project-collections/client/src/index.js":"1","/mnt/h/XDev/Home/project-collections/client/src/reportWebVitals.js":"2","/mnt/h/XDev/Home/project-collections/client/src/App.js":"3","/mnt/h/XDev/Home/project-collections/client/src/auth/Login.jsx":"4","/mnt/h/XDev/Home/project-collections/client/src/auth/Signup.jsx":"5","/mnt/h/XDev/Home/project-collections/client/src/admin/Admin.jsx":"6","/mnt/h/XDev/Home/project-collections/client/src/admin/TableRow.jsx":"7","/mnt/h/XDev/Home/project-collections/client/src/profile/Profile.jsx":"8","/mnt/h/XDev/Home/project-collections/client/src/profile/TableRowCollection.jsx":"9","/mnt/h/XDev/Home/project-collections/client/src/main/Main.jsx":"10","/mnt/h/XDev/Home/project-collections/client/src/core/context.jsx":"11","/mnt/h/XDev/Home/project-collections/client/src/collection/Collection.jsx":"12","/mnt/h/XDev/Home/project-collections/client/src/items/ItemList.jsx":"13","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentForm.jsx":"14","/mnt/h/XDev/Home/project-collections/client/src/comments/Comment.jsx":"15","/mnt/h/XDev/Home/project-collections/client/src/items/ItemPrev.jsx":"16","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionPrev.jsx":"17","/mnt/h/XDev/Home/project-collections/client/src/items/Item.jsx":"18","/mnt/h/XDev/Home/project-collections/client/src/main/Footer.jsx":"19","/mnt/h/XDev/Home/project-collections/client/src/main/Header.jsx":"20","/mnt/h/XDev/Home/project-collections/client/src/items/ItemForm.jsx":"21","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionForm.jsx":"22","/mnt/h/XDev/Home/project-collections/client/src/profile/ProfileCard.jsx":"23","/mnt/h/XDev/Home/project-collections/client/src/collection/Field.jsx":"24","/mnt/h/XDev/Home/project-collections/client/src/drops/DropImageBox.jsx":"25","/mnt/h/XDev/Home/project-collections/client/src/items/CustomFields.jsx":"26"},{"size":287,"mtime":1609254632790,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1609251387818,"results":"29","hashOfConfig":"28"},{"size":2093,"mtime":1610125672445,"results":"30","hashOfConfig":"28"},{"size":2753,"mtime":1609592268716,"results":"31","hashOfConfig":"28"},{"size":2649,"mtime":1609590547651,"results":"32","hashOfConfig":"28"},{"size":3942,"mtime":1609685475150,"results":"33","hashOfConfig":"28"},{"size":794,"mtime":1609599149741,"results":"34","hashOfConfig":"28"},{"size":2308,"mtime":1610124705230,"results":"35","hashOfConfig":"28"},{"size":1198,"mtime":1610125539224,"results":"36","hashOfConfig":"28"},{"size":2929,"mtime":1609692888517,"results":"37","hashOfConfig":"28"},{"size":256,"mtime":1609593926240,"results":"38","hashOfConfig":"28"},{"size":1591,"mtime":1610126206722,"results":"39","hashOfConfig":"28"},{"size":1103,"mtime":1609865429706,"results":"40","hashOfConfig":"28"},{"size":845,"mtime":1609360451100,"results":"41","hashOfConfig":"28"},{"size":657,"mtime":1609360346217,"results":"42","hashOfConfig":"28"},{"size":1117,"mtime":1609497320898,"results":"43","hashOfConfig":"28"},{"size":1040,"mtime":1609497310404,"results":"44","hashOfConfig":"28"},{"size":4172,"mtime":1609692762623,"results":"45","hashOfConfig":"28"},{"size":400,"mtime":1609692810885,"results":"46","hashOfConfig":"28"},{"size":2521,"mtime":1610026397039,"results":"47","hashOfConfig":"28"},{"size":4436,"mtime":1610017112483,"results":"48","hashOfConfig":"28"},{"size":5960,"mtime":1610125632501,"results":"49","hashOfConfig":"28"},{"size":1677,"mtime":1609692656839,"results":"50","hashOfConfig":"28"},{"size":584,"mtime":1609865235110,"results":"51","hashOfConfig":"28"},{"size":1559,"mtime":1610027352706,"results":"52","hashOfConfig":"28"},{"size":3428,"mtime":1610014598496,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"blk22b",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},"/mnt/h/XDev/Home/project-collections/client/src/index.js",[],["113","114"],"/mnt/h/XDev/Home/project-collections/client/src/reportWebVitals.js",[],"/mnt/h/XDev/Home/project-collections/client/src/App.js",[],"/mnt/h/XDev/Home/project-collections/client/src/auth/Login.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/auth/Signup.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/admin/Admin.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/admin/TableRow.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/profile/Profile.jsx",["115","116","117","118"],"/mnt/h/XDev/Home/project-collections/client/src/profile/TableRowCollection.jsx",["119"],"/mnt/h/XDev/Home/project-collections/client/src/main/Main.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/core/context.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/collection/Collection.jsx",["120","121","122"],"/mnt/h/XDev/Home/project-collections/client/src/items/ItemList.jsx",["123"],"import React, {useContext} from 'react';\r\nimport {Card, Row, Col} from 'react-bootstrap';\r\n\r\n//import {AuthContext} from '../core/context';\r\nimport ItemPrev from './ItemPrev';\r\n\r\nexport default function ItemList() {\r\n    //const {isAuth, isAdmin} = useContext(AuthContext);\r\n\r\n    return (\r\n        <Card className=\"my-1 pt-3 border-secondary bg-light\">\r\n            <Card.Title className=\"ml-3\">All items with \"TAG/SEARCH\": </Card.Title>\r\n            <Card.Body>\r\n                <Row>\r\n                <Col lg={4}>\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                </Col>\r\n                <Col lg={4}>\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                </Col>\r\n                <Col lg={4}>\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                    <ItemPrev />\r\n                </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/comments/CommentForm.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/comments/Comment.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/items/ItemPrev.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionPrev.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/items/Item.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/main/Footer.jsx",["124","125"],"import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"container text-center mt-4\">\r\n            <p>\r\n                © 2020-2021 Bla-Bla-Company, Inc.  ·\r\n                <a href=\"#\"> BadLink#1 </a>\r\n                  ·\r\n                <a href=\"#\"> BadLink#2 </a>\r\n                <span></span>\r\n            </p>\r\n        </footer>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/main/Header.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/items/ItemForm.jsx",["126","127"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {Card, Form, Button, Col} from 'react-bootstrap';\r\nimport {useParams} from \"react-router-dom\";\r\nimport Tags from \"@yaireo/tagify/dist/react.tagify\"\r\nimport axios from 'axios';\r\n\r\nimport {AuthContext} from '../core/context';\r\nimport DropImageBox from '../drops/DropImageBox';\r\nimport CustomFields from './CustomFields';\r\n\r\nexport default function ItemForm() {\r\n    const {collection_id} = useParams();\r\n    const {userId} = useContext(AuthContext);\r\n    const [scheme, setScheme] = useState([])\r\n    const [inputTags, setInputTags] = useState([])\r\n    const [whiteList, setWhiteList] = useState()\r\n    const [formData, setFormData] = useState({name: \"\", files: [], fields: [], tags: []})\r\n    const [fieldsData, setFieldsData] = useState({name: \"\", files: [], fields: [], tags: []})\r\n\r\n    const onDropHandle = (afiles, rfiles, event) => {\r\n        if (afiles) { setFormData({...formData, files: afiles}) }\r\n    }\r\n\r\n    const tagsChangeHandle = (event) => {\r\n        event.persist();\r\n        let tags = []\r\n        let data = event.target.value ? JSON.parse(event.target.value): []\r\n        for (let i in data) {\r\n            tags.push(data[i].value);\r\n        }\r\n        setInputTags(tags);\r\n    }\r\n\r\n    const formChangeHandle = (event) => {\r\n        setFormData({...formData, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    const fieldsChangeHandle = (event) => {\r\n        let tempData = fieldsData;\r\n        tempData[parseInt(event.target.id)] = event.target.value;\r\n        setFieldsData(tempData)\r\n    }\r\n\r\n    const formSubmitHandle = (event) => {\r\n        event.preventDefault();\r\n        // TODO: сабмит\r\n        console.log(\r\n            'formData:', formData,\r\n            'inputTags:', inputTags,\r\n            'fieldsData:', fieldsData,\r\n        );\r\n    }\r\n\r\n    useEffect( () => {\r\n        if (scheme.length === 0) {\r\n            axios.post('/api/collection/scheme', {cid: collection_id})\r\n            .then((res)=>{ })\r\n            .catch((err)=>{ })\r\n        }\r\n        if (!whiteList){\r\n            axios.get('/api/tag')\r\n            .then((res)=>{ let temp = []; res.data.forEach( (tag) => { temp.push(tag.name) }); setWhiteList(temp)})\r\n            .catch((err)=>{ console.log(err) })\r\n        }\r\n        // TODO: получить схему по ид коллекции post\r\n        // ЗАГЛУШКА\r\n        let temp = new Array(15).fill('field')\r\n        setScheme(temp)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"my-1 p-2 bg-dark text-light\">\r\n                <Form className=\"bg-dark text-light\" onSubmit={formSubmitHandle}>\r\n                    <Card.Title className=\"text-center mb-3\"> Create new item for \"COLL_NAME\" </Card.Title>\r\n                    <Form.Row>\r\n                        <Col lg={4}>\r\n                            <Form.Group>\r\n                                <DropImageBox onDrop={onDropHandle} successFlag={formData.files.length} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col lg={8}>\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    required={true}\r\n                                    onChange={formChangeHandle}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name\"\r\n                                    name=\"name\"\r\n                                    className=\"bg-dark text-light\"/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Tags\r\n                                    value=''\r\n                                    whitelist={whiteList}\r\n                                    onChange={tagsChangeHandle}\r\n                                    placeholder=\"Tags\"\r\n                                    className=\"form-control bg-dark text-light c-tag border-light\"/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <CustomFields scheme={scheme} onChangeFunc={fieldsChangeHandle}/>\r\n                    </Form.Row>\r\n                    <Button variant=\"light\" type=\"submit\" className=\"float-right w-25\"> Create </Button>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/collection/CollectionForm.jsx",["128","129","130","131"],"/mnt/h/XDev/Home/project-collections/client/src/profile/ProfileCard.jsx",["132","133","134","135"],"import React, {useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Card, Row, Col, Image} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n//import {AuthContext} from '../core/context';\r\n\r\nimport TableRowCollection from './TableRowCollection';\r\n\r\nexport default function ProfileCard(props) {\r\n    const [userData, setUserData] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        created: \"\"})\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/profile', { \"username\": props.username})\r\n        .then((res)=>{\r\n            setUserData(res.data.userdata)\r\n        })\r\n        .catch((err)=>{console.log(err)})\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Header as=\"h5\">Profile:</Card.Header>\r\n                <Card.Body>\r\n                    <Row><Col><Row>\r\n                        <Col><span>{userData.username}</span></Col>\r\n                    </Row><Row>\r\n                        <Col><span>{userData.email}</span></Col>\r\n                    </Row></Col><Col><Row>\r\n                    </Row><Row>\r\n                        <Col><span>JOINED</span></Col>\r\n                        <Col><span>{new Date(userData.created).toLocaleDateString()}</span></Col>\r\n                    </Row></Col><Col><Row>\r\n                        <Col><span>DATA ?:</span></Col>\r\n                        <Col><span>IMG</span></Col>\r\n                    </Row><Row>\r\n                        <Col><span>DATA ?</span></Col>\r\n                        <Col><span>##############</span></Col>\r\n                    </Row></Col></Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/collection/Field.jsx",[],"/mnt/h/XDev/Home/project-collections/client/src/drops/DropImageBox.jsx",["136","137","138","139"],"import React from 'react';\r\nimport Dropzone, {useDropzone} from 'react-dropzone'\r\n\r\nexport default function DropImageBox(props) {\r\n    const {getRootProps, getInputProps, acceptedFiles, fileRejections} = useDropzone()\r\n    return (\r\n        <Dropzone\r\n            onDrop={props.onDrop}\r\n            onDragEnter={(event)=>{event.target.classList.toggle ('dropbox-active')}}\r\n            onDragLeave={(event)=>{event.target.classList.toggle ('dropbox-active')}}\r\n            accept=\"image/jpg, image/jpeg, image/png\"\r\n            maxFiles={1}\r\n            maxSize={500000}\r\n            >\r\n            {({getRootProps, getInputProps}) => (\r\n                <section className=\"text-center\">\r\n                    <div {...getRootProps()}\r\n                        className={props.prev ?\r\n                            \"rounded  dropbox dropbox-success mx-auto\":\r\n                            \"rounded  dropbox mx-auto\"}\r\n                        style={{\r\n                            \"background-position\": \"center\",\r\n                            \"background-size\": \"contain\",\r\n                            \"background-image\": `url(${props.prev})`,\r\n                            \"background-origin\": \"content-box\",\r\n                            \"background-repeat\": \"no-repeat\"\r\n                        }}\r\n                        >\r\n                        <input {...getInputProps()}/>\r\n                        {props.prev ? '' : <p> Click here  or drop image</p>}\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </Dropzone>\r\n    )\r\n}\r\n","/mnt/h/XDev/Home/project-collections/client/src/items/CustomFields.jsx",["140","141","142","143","144","145","146","147","148","149"],"import React from 'react';\r\nimport {Form, Col, Row,Container} from 'react-bootstrap';\r\n\r\nexport default function CustomFields(props) {\r\n    const numClearing = (e) => {\r\n        e.target.value = e.target.value.replace(/[^\\d]/g, '');\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-2\">\r\n\r\n            {props.scheme.slice(0,3).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Form.Label column lg={3} > {field} </Form.Label>\r\n                    <Col lg={6}>\r\n                        <Form.Control\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            name={index}\r\n                            className=\"bg-dark text-light\"\r\n                            type=\"number\"\r\n                            onKeyUp={numClearing}/>\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(3,6).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Form.Label column lg={3} > {field} </Form.Label>\r\n                    <Col lg={6}>\r\n                        <Form.Control\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 3}\r\n                            className=\"bg-dark text-light\" />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(6,9).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Form.Label column lg={3} > {field} </Form.Label>\r\n                    <Col lg={6}>\r\n                        <Form.Control\r\n                            rows={5}\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 6}\r\n                            className=\"bg-dark text-light unres\"\r\n                            as=\"textarea\" />\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(9,12).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Form.Label column lg={3} > {field} </Form.Label>\r\n                    <Col lg={6}>\r\n                        <Form.Control\r\n                            placeholder=\"asdasd\"\r\n                            required={true}\r\n                            onChange={props.onChangeFunc}\r\n                            id={index + 9}\r\n                            className=\"bg-dark text-light text-center\"\r\n                            type=\"date\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n            {props.scheme.slice(12,15).map((field,index)=>{ if (field != '') { return (\r\n                <Form.Group as={Row} className=\"justify-content-center\">\r\n                    <Form.Check\r\n                        className=\"text-center\"\r\n                        id={index + 12}\r\n                        onChange={props.onChangeFunc}\r\n                        label={field}/>\r\n                </Form.Group>\r\n            )}})}\r\n\r\n        </Container>\r\n    )\r\n}\r\n",{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":3,"column":30,"nodeType":"156","messageId":"157","endLine":3,"endColumn":33},{"ruleId":"154","severity":1,"message":"158","line":3,"column":35,"nodeType":"156","messageId":"157","endLine":3,"endColumn":38},{"ruleId":"154","severity":1,"message":"159","line":13,"column":12,"nodeType":"156","messageId":"157","endLine":13,"endColumn":18},{"ruleId":"160","severity":1,"message":"161","line":24,"column":8,"nodeType":"162","endLine":24,"endColumn":10,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":20,"column":17,"nodeType":"166","endLine":20,"endColumn":76},{"ruleId":"154","severity":1,"message":"167","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":13},{"ruleId":"154","severity":1,"message":"168","line":12,"column":19,"nodeType":"156","messageId":"157","endLine":12,"endColumn":27},{"ruleId":"160","severity":1,"message":"169","line":18,"column":7,"nodeType":"162","endLine":18,"endColumn":9,"suggestions":"170"},{"ruleId":"154","severity":1,"message":"171","line":1,"column":16,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":8,"column":17,"nodeType":"166","endLine":8,"endColumn":29},{"ruleId":"172","severity":1,"message":"173","line":10,"column":17,"nodeType":"166","endLine":10,"endColumn":29},{"ruleId":"154","severity":1,"message":"174","line":13,"column":12,"nodeType":"156","messageId":"157","endLine":13,"endColumn":18},{"ruleId":"160","severity":1,"message":"175","line":69,"column":8,"nodeType":"162","endLine":69,"endColumn":10,"suggestions":"176"},{"ruleId":"154","severity":1,"message":"171","line":1,"column":16,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"177","line":8,"column":9,"nodeType":"156","messageId":"157","endLine":8,"endColumn":20},{"ruleId":"154","severity":1,"message":"178","line":13,"column":12,"nodeType":"156","messageId":"157","endLine":13,"endColumn":19},{"ruleId":"154","severity":1,"message":"179","line":13,"column":21,"nodeType":"156","messageId":"157","endLine":13,"endColumn":31},{"ruleId":"154","severity":1,"message":"180","line":2,"column":9,"nodeType":"156","messageId":"157","endLine":2,"endColumn":18},{"ruleId":"154","severity":1,"message":"181","line":3,"column":25,"nodeType":"156","messageId":"157","endLine":3,"endColumn":30},{"ruleId":"154","severity":1,"message":"182","line":7,"column":8,"nodeType":"156","messageId":"157","endLine":7,"endColumn":26},{"ruleId":"160","severity":1,"message":"183","line":21,"column":8,"nodeType":"162","endLine":21,"endColumn":10,"suggestions":"184"},{"ruleId":"154","severity":1,"message":"185","line":5,"column":12,"nodeType":"156","messageId":"157","endLine":5,"endColumn":24},{"ruleId":"154","severity":1,"message":"186","line":5,"column":26,"nodeType":"156","messageId":"157","endLine":5,"endColumn":39},{"ruleId":"154","severity":1,"message":"187","line":5,"column":41,"nodeType":"156","messageId":"157","endLine":5,"endColumn":54},{"ruleId":"154","severity":1,"message":"188","line":5,"column":56,"nodeType":"156","messageId":"157","endLine":5,"endColumn":70},{"ruleId":"189","severity":1,"message":"190","line":12,"column":55,"nodeType":"191","messageId":"192","endLine":12,"endColumn":57},{"ruleId":"193","severity":1,"message":"194","line":12,"column":69,"nodeType":"195","messageId":"196","endLine":12,"endColumn":71},{"ruleId":"189","severity":1,"message":"190","line":27,"column":55,"nodeType":"191","messageId":"192","endLine":27,"endColumn":57},{"ruleId":"193","severity":1,"message":"194","line":27,"column":69,"nodeType":"195","messageId":"196","endLine":27,"endColumn":71},{"ruleId":"189","severity":1,"message":"190","line":40,"column":55,"nodeType":"191","messageId":"192","endLine":40,"endColumn":57},{"ruleId":"193","severity":1,"message":"194","line":40,"column":69,"nodeType":"195","messageId":"196","endLine":40,"endColumn":71},{"ruleId":"189","severity":1,"message":"190","line":55,"column":56,"nodeType":"191","messageId":"192","endLine":55,"endColumn":58},{"ruleId":"193","severity":1,"message":"194","line":55,"column":70,"nodeType":"195","messageId":"196","endLine":55,"endColumn":72},{"ruleId":"189","severity":1,"message":"190","line":70,"column":57,"nodeType":"191","messageId":"192","endLine":70,"endColumn":59},{"ruleId":"193","severity":1,"message":"194","line":70,"column":71,"nodeType":"195","messageId":"196","endLine":70,"endColumn":73},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'isAuth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAdmin', 'profileUserName', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["199"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","'setItems' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'items.length'. Either include it or remove the dependency array.",["200"],"'useContext' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'collection_id', 'scheme.length', and 'whiteList'. Either include them or remove the dependency array.",["201"],"'AuthContext' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'useParams' is defined but never used.","'Image' is defined but never used.","'TableRowCollection' is defined but never used.","React Hook useEffect has a missing dependency: 'props.username'. Either include it or remove the dependency array.",["202"],"'getRootProps' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'acceptedFiles' is assigned a value but never used.","'fileRejections' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [isAdmin, profileUserName, username]",{"range":"211","text":"212"},"Update the dependencies array to be: [items.length]",{"range":"213","text":"214"},"Update the dependencies array to be: [collection_id, scheme.length, whiteList]",{"range":"215","text":"216"},"Update the dependencies array to be: [props.username]",{"range":"217","text":"218"},[876,878],"[isAdmin, profileUserName, username]",[574,576],"[items.length]",[2450,2452],"[collection_id, scheme.length, whiteList]",[670,672],"[props.username]"]